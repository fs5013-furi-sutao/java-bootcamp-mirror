{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-entry-42-call-by-value-and-call-by-reference-mdx-cee0321dcd4fc429788b.js","mappings":"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","sources":["webpack://website/./pages/docs/entry/42-call-by-value-and-call-by-reference.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    h4: \"h4\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"42-java-の値渡しと参照渡し\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#42-java-%E3%81%AE%E5%80%A4%E6%B8%A1%E3%81%97%E3%81%A8%E5%8F%82%E7%85%A7%E6%B8%A1%E3%81%97\",\n    \"aria-label\": \"42 java の値渡しと参照渡し permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"42. Java の値渡しと参照渡し\"), \"\\n\", React.createElement(\"p\", {\n    className: \"goal\"\n  }, \"どんな時に値渡しとなり、どんな時に参照渡しになり、それぞれの処理結果がどう違いがあるかを説明できること\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"値渡しと参照渡し\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%80%A4%E6%B8%A1%E3%81%97%E3%81%A8%E5%8F%82%E7%85%A7%E6%B8%A1%E3%81%97\",\n    \"aria-label\": \"値渡しと参照渡し permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"値渡しと参照渡し\"), \"\\n\", React.createElement(_components.p, null, \"Java で外部メソッドに引数を渡す方法として、2 種類の方法があります。\"), \"\\n\", React.createElement(_components.p, null, \"1 つが基本型変数による「値渡し」であり、もう 1 つが参照型変数による「参照渡し」です。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"基本型とは参照型とは\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%9F%BA%E6%9C%AC%E5%9E%8B%E3%81%A8%E3%81%AF%E5%8F%82%E7%85%A7%E5%9E%8B%E3%81%A8%E3%81%AF\",\n    \"aria-label\": \"基本型とは参照型とは permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"基本型とは？参照型とは？\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"基本型\")), \"\\n\", React.createElement(_components.p, null, \"Java のデータにおいて、基本型とは long, int, short, byte, float, double, boolean, char の 8 つのデータ型です。\"), \"\\n\", React.createElement(_components.p, null, \"基本データ型の変数は、型によって必要なビット数が決まっています。これらの型の値を保持する変数を基本データ型変数といいます。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"参照型\")), \"\\n\", React.createElement(_components.p, null, \"一方の参照型は、一般的なクラスから生成したインスタンスが該当します。\", React.createElement(\"span\", {\n    style: {\n      color: \"#ff0000\"\n    }\n  }, \" \", React.createElement(_components.strong, null, \"配列も参照型に含まれます。\"), \" \"), \"実は、配列も内部的にはインスタンスが生成されているのです。\"), \"\\n\", React.createElement(_components.p, null, \"参照型は、値そのものを保持するのではなく、値が置いてある場所（メモリのアドレス）を保持します。値が置いてある場所を示すアドレスを保持する変数を 参照型変数といいます。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"java-の基本型は値渡し\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#java-%E3%81%AE%E5%9F%BA%E6%9C%AC%E5%9E%8B%E3%81%AF%E5%80%A4%E6%B8%A1%E3%81%97\",\n    \"aria-label\": \"java の基本型は値渡し permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Java の基本型は「値渡し」\"), \"\\n\", React.createElement(_components.p, null, \"Java の基本型では、外部メソッドへ引数を渡す方法として、「値渡し」という方法が使われます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"基本型の変数を引数にする\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%9F%BA%E6%9C%AC%E5%9E%8B%E3%81%AE%E5%A4%89%E6%95%B0%E3%82%92%E5%BC%95%E6%95%B0%E3%81%AB%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"基本型の変数を引数にする permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"基本型の変数を引数にする\"), \"\\n\", React.createElement(_components.p, null, \"Java には、基本型（プリミティブ）と参照型があります。基本型では、値渡し（Call By Value）というメソッドの呼び出し方をします。\"), \"\\n\", React.createElement(_components.p, null, \"次のコードは、基本型の変数を引数にして外部のメソッドを呼ぶ典型的な例です。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=値渡し\"\n  }, \"public class CallByValue {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        int foo = 128;\\r\\n        deliver(foo);\\r\\n\\r\\n        System.out.printf(\\\"int foo => %d %n\\\", foo);\\r\\n    }\\r\\n    private static void deliver(int bar) {\\r\\n\\r\\n        bar = 256;\\r\\n\\r\\n        System.out.printf(\\\"int bar => %d %n\\\", bar);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValue.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValue.java\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"実行結果\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\",\n    \"aria-label\": \"実行結果 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"実行結果\"), \"\\n\", React.createElement(_components.p, null, \"呼び出し元の変数 foo は変更されていません。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"int bar = 256\\r\\nint foo = 128\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"値渡しの特徴\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%80%A4%E6%B8%A1%E3%81%97%E3%81%AE%E7%89%B9%E5%BE%B4\",\n    \"aria-label\": \"値渡しの特徴 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"「値渡し」の特徴\"), \"\\n\", React.createElement(_components.p, null, \"上で挙げた例で、どんな現象が起こっているのか見てみます。\"), \"\\n\", React.createElement(_components.p, null, \"foo を引数としてメソッドに渡し、メソッド内でその引数を変更しようとも、元の変数 foo の値は変わりません。\"), \"\\n\", React.createElement(_components.p, null, \"どうして値が書き換わらないのか。外部メソッドに渡しているのが、変数の「実体」ではなく「値のみ」だからです。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"内部処理のイメージ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%86%85%E9%83%A8%E5%87%A6%E7%90%86%E3%81%AE%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\",\n    \"aria-label\": \"内部処理のイメージ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"内部処理のイメージ\"), \"\\n\", React.createElement(_components.p, null, \"では実際にメモリでどんなことが行われているか、処理を見てみます。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/call-by-value-on-java.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"基本型変数の値は、メモリのスタック領域に格納されます。ヒープ領域は使いません。\"), \"\\n\", React.createElement(_components.p, null, \"スタック領域に格納されるデータは後入れ先出し（LIFO）なので、後入れした bar が上に来た状態でイメージを表現しています。\"), \"\\n\", React.createElement(_components.p, null, \"実引数 foo が bar に渡されますが、ここで渡されるのは値のみ。実体そのものではありません。\"), \"\\n\", React.createElement(_components.p, null, \"呼び出されたメソッドでは、渡された値を書き換えているだけ。foo の実体を書き換えているわけではありません。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"間違ったイメージ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E9%96%93%E9%81%95%E3%81%A3%E3%81%9F%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\",\n    \"aria-label\": \"間違ったイメージ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"間違ったイメージ\"), \"\\n\", React.createElement(_components.p, null, \"次の図は値渡しの間違ったイメージです。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/doubt-image-of-call-by-value.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"間違ったイメージでは、foo の実体がメッソドに渡され、その値が書き換えられています。\"), \"\\n\", React.createElement(_components.p, null, \"このイメージでいくと、メソッドで受け取った引数を変更することで、元の変数も変わってしまうことになります。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、Java の基本型ではこのようなことは行われません。また、このようなイメージを値渡しとは呼びません。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"java-の参照型は参照の値渡しコードで見てみる\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#java-%E3%81%AE%E5%8F%82%E7%85%A7%E5%9E%8B%E3%81%AF%E5%8F%82%E7%85%A7%E3%81%AE%E5%80%A4%E6%B8%A1%E3%81%97%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%8B\",\n    \"aria-label\": \"java の参照型は参照の値渡しコードで見てみる permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Java の参照型は「参照の値渡し」：コードで見てみる\"), \"\\n\", React.createElement(_components.p, null, \"外部メソッドへ引数を渡す方法は色々ありますが、Java の参照型では「参照の値渡し」という方法が使われます。ここでは、ひと言では分かりにくい「参照の値渡し」という現象をコードの側面から見てみます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"３つの事例\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EF%BC%93%E3%81%A4%E3%81%AE%E4%BA%8B%E4%BE%8B\",\n    \"aria-label\": \"３つの事例 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"３つの事例\"), \"\\n\", React.createElement(_components.p, null, \"Java には、基本型（プリミティブ型）と参照型があります。参照型では、参照の値渡し（Call By Value of Reference）というメソッドの呼び出し方をします。\"), \"\\n\", React.createElement(_components.p, null, \"例をコードで見てみます。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"例１フィールドを書き換える\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%8B%EF%BC%91%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%82%92%E6%9B%B8%E3%81%8D%E6%8F%9B%E3%81%88%E3%82%8B\",\n    \"aria-label\": \"例１フィールドを書き換える permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"例１：フィールドを書き換える\"), \"\\n\", React.createElement(_components.p, null, \"次のコードは参照型の変数が利用する Obj クラスです。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=Objクラス\"\n  }, \"public class Obj {\\r\\n    public int num;\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/Obj.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/Obj.java\")), \"\\n\", React.createElement(_components.p, null, \"そして次のコードが、参照型の変数を引数にして外部のメソッドを呼ぶ典型的な例です。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=参照渡し\"\n  }, \"class CallByValueOfReference_basis {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        Obj foo = new Obj();\\r\\n        foo.num = 128;\\r\\n\\r\\n        deliver(foo);\\r\\n\\r\\n        System.out.printf(\\\" foo.num => %d %n\\\", foo.num);\\r\\n    }\\r\\n\\r\\n    private static void deliver(Obj bar) {\\r\\n        bar.num = 256;\\r\\n        System.out.printf(\\\" bar.num => %d %n\\\", bar.num);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_basis.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_basis.java\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"実行結果-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-1\",\n    \"aria-label\": \"実行結果 1 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"実行結果\"), \"\\n\", React.createElement(_components.p, null, \"呼び出し元の変数 foo が書き換わっています。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" bar.num => 256\\r\\n foo.num => 256\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"典型的な例だけ見ると\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%85%B8%E5%9E%8B%E7%9A%84%E3%81%AA%E4%BE%8B%E3%81%A0%E3%81%91%E8%A6%8B%E3%82%8B%E3%81%A8\",\n    \"aria-label\": \"典型的な例だけ見ると permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"典型的な例だけ見ると\"), \"\\n\", React.createElement(_components.p, null, \"典型的な例だけ見ると、Java の参照型は「参照渡し」をしているように見えます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"参照渡しの特徴\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%8F%82%E7%85%A7%E6%B8%A1%E3%81%97%E3%81%AE%E7%89%B9%E5%BE%B4\",\n    \"aria-label\": \"参照渡しの特徴 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"「参照渡し」の特徴\"), \"\\n\", React.createElement(_components.p, null, \"参照渡しは、メソッドの引数に参照を渡す方法です。\"), \"\\n\", React.createElement(_components.p, null, \"参照渡しを行うと、引数 (仮引数) を変更すると元の変数 (実引数) も変更される という現象がおこります。上記のコード実行例では、まさにこのような現象が起きていますね。\"), \"\\n\", React.createElement(_components.p, null, \"この例だけ見れば「Java の参照型は参照渡し」と言えます。しかし実際には、Java は参照渡しを行いません。なぜでしょうか。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"例２new-する\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%8B%EF%BC%92new-%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"例２new する permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"例２：new する\"), \"\\n\", React.createElement(_components.p, null, \"今度は、引数で渡したオブジェクトを new してみます。その後は前例と同じようにオブジェクトのフィールドを書き換えます。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=参照渡し（newしてみる）\"\n  }, \"class CallByValueOfReference_new {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        Obj foo = new Obj();\\r\\n        foo.num = 128;\\r\\n\\r\\n        deliver(foo);\\r\\n\\r\\n        System.out.printf(\\\" foo.num => %d %n\\\", foo.num);\\r\\n    }\\r\\n\\r\\n    private static void deliver(Obj bar) {\\r\\n        bar = new Obj();\\r\\n        bar.num = 256;\\r\\n        System.out.printf(\\\" bar.num => %d %n\\\", bar.num);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_new.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_new.java\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"実行結果-2\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-2\",\n    \"aria-label\": \"実行結果 2 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"実行結果\"), \"\\n\", React.createElement(_components.p, null, \"呼び出し元の変数 foo は変更されていません。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" bar.num => 256\\r\\n foo.num => 128\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"結果を見ると\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%B5%90%E6%9E%9C%E3%82%92%E8%A6%8B%E3%82%8B%E3%81%A8\",\n    \"aria-label\": \"結果を見ると permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"結果を見ると\"), \"\\n\", React.createElement(_components.p, null, \"結果を見ると、元の変数 foo の値が書き換わっていません。\"), \"\\n\", React.createElement(_components.p, null, \"参照渡しでは、この現象の説明がつきません。参照渡しであれば、foo.num の値は 256 になるはずだからです。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"例３オブジェクトに-null-を代入する\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%8B%EF%BC%93%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB-null-%E3%82%92%E4%BB%A3%E5%85%A5%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"例３オブジェクトに null を代入する permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"例３：オブジェクトに null を代入する\"), \"\\n\", React.createElement(_components.p, null, \"もう１つ例を見てみます。今度は引数で渡したオブジェクトに null を代入します。その後はまた同じように、オブジェクトのフィールドの値を書き換えます。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=参照渡し（nullを代入してみる）\"\n  }, \"class CallByValueOfReference_null {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        Obj foo = new Obj();\\r\\n        foo.num = 128;\\r\\n\\r\\n        deliver(foo);\\r\\n\\r\\n        System.out.printf(\\\" foo.num => %d %n\\\", foo.num);\\r\\n    }\\r\\n\\r\\n    private static void deliver(Obj bar) {\\r\\n        bar = null;\\r\\n        System.out.printf(\\\" bar => %d %n\\\", bar);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_null.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/CallByValueOfReference_null.java\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"実行結果-3\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-3\",\n    \"aria-label\": \"実行結果 3 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"実行結果\"), \"\\n\", React.createElement(_components.p, null, \"呼び出し元の変数 foo は変更されていません。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \" bar => null\\r\\n foo.num => 128\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"なぜこんなことが起こるのか\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%81%AA%E3%81%9C%E3%81%93%E3%82%93%E3%81%AA%E3%81%93%E3%81%A8%E3%81%8C%E8%B5%B7%E3%81%93%E3%82%8B%E3%81%AE%E3%81%8B\",\n    \"aria-label\": \"なぜこんなことが起こるのか permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"なぜこんなことが起こるのか\"), \"\\n\", React.createElement(_components.p, null, \"仮引数（引数で渡されたオブジェクト）のフィールドの値をメソッド内で書き換えると、実引数（引数で渡された元のオブジェクト）のフィールドの値も書き換わる。\"), \"\\n\", React.createElement(_components.p, null, \"それなのに一方では、引数で渡されたオブジェクトをメソッド内で new したり、null を代入した場合は、なぜ書き換わらないのか。\"), \"\\n\", React.createElement(_components.p, null, \"その答えはやはり「Java の参照型は参照の値渡しだから」なのです。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"java-の参照型は参照の値渡し処理イメージで見てみる\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#java-%E3%81%AE%E5%8F%82%E7%85%A7%E5%9E%8B%E3%81%AF%E5%8F%82%E7%85%A7%E3%81%AE%E5%80%A4%E6%B8%A1%E3%81%97%E5%87%A6%E7%90%86%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%A7%E8%A6%8B%E3%81%A6%E3%81%BF%E3%82%8B\",\n    \"aria-label\": \"java の参照型は参照の値渡し処理イメージで見てみる permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Java の参照型は「参照の値渡し」：処理イメージで見てみる\"), \"\\n\", React.createElement(_components.p, null, \"外部メソッドへ引数を渡す方法は色々ありますが、Java の参照型変数をメソッドの引数に渡す方法では「参照の値渡し」という方法が使われます。ここでは、ひと言では分かりにくい「参照の値渡し」の意味を、メモリ内部の処理イメージしながら考えていきます。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"この記事で使われるメモリ内部の処理イメージは説明しやすいように簡略化しており、あくまでも Java プログラムの挙動を理解するための手段として利用しています。使用されている図が正確なイメージではないことには注意してください\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"内部処理のイメージ-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%86%85%E9%83%A8%E5%87%A6%E7%90%86%E3%81%AE%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8-1\",\n    \"aria-label\": \"内部処理のイメージ 1 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"内部処理のイメージ\"), \"\\n\", React.createElement(_components.p, null, \"では実際にメモリでどんなことが行われているか、処理を見てみます。上記記事のコード例にイメージは対応しているので、コードを追いながら参考にしてください。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"間違った参照の値渡しのイメージ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E9%96%93%E9%81%95%E3%81%A3%E3%81%9F%E5%8F%82%E7%85%A7%E3%81%AE%E5%80%A4%E6%B8%A1%E3%81%97%E3%81%AE%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\",\n    \"aria-label\": \"間違った参照の値渡しのイメージ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"間違った「参照の値渡し」のイメージ\"), \"\\n\", React.createElement(_components.p, null, \"まずは間違った「参照の値渡し」のイメージを紹介します。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/doubt-image.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"間違っているポイントは、foo と bar が同じ参照先を保持していることです。この状態は、参照の値渡しではなく、参照そのものを渡す「参照渡し」です。\"), \"\\n\", React.createElement(_components.p, null, \"メモリのスタック領域では、オブジェクトは参照先を示す値（アドレス）を保持しています。この例では 1440 番です。\"), \"\\n\", React.createElement(_components.p, null, \"実際のオブジェクトはヒープ領域に格納されており、例えばアドレスの 1440 番の位置に格納されたオブジェクトの num の値は 128 になっています。\"), \"\\n\", React.createElement(_components.p, null, \"そこでもし、メソッド内で仮引数 bar に新たなオブジェクトを代入したらどうなるでしょうか。\"), \"\\n\", React.createElement(_components.p, null, \"当然、スタック領域に保持されているオブジェクト参照情報は、新たなオブジェクト参照アドレスに置き換わります。この場合は、3551 番になっています。\"), \"\\n\", React.createElement(_components.p, null, \"さらに、この新たなオブジェクトのフィールド num の値を 256 にしたら、結果的に foo.num の値は 256 になるはずです。\"), \"\\n\", React.createElement(_components.p, null, \"ところが実際にこのようなプログラムを Java で書くと、このようにはなりません。 foo.num の値は 128 になります。\"), \"\\n\", React.createElement(_components.p, null, \"なぜなら Java の参照型は、参照そのものを渡す「参照渡し」ではなく、参照の値を渡す「参照の値渡し」だからです。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"仮引数のオブジェクトに新オブジェクトを代入した場合\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BB%AE%E5%BC%95%E6%95%B0%E3%81%AE%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E6%96%B0%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BB%A3%E5%85%A5%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\",\n    \"aria-label\": \"仮引数のオブジェクトに新オブジェクトを代入した場合 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"仮引数のオブジェクトに新オブジェクトを代入した場合\"), \"\\n\", React.createElement(_components.p, null, \"では実際に「参照の値渡し」で、メソッド先でオブジェクトに new を代入した場合のイメージを見てみます。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/new-into-formal-arg.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"参照渡しとは違い、メソッドの引数に参照の値（アドレス）を渡しています。参照の値渡しです。\"), \"\\n\", React.createElement(_components.p, null, \"メソッド内で仮引数 bar に新しいオブジェクトを代入すると、スタック領域の値は、新しいオブジェクトが格納されているヒープ領域のアドレスに置き換わります。図の例では 3511 番です。\"), \"\\n\", React.createElement(_components.p, null, \"メソッド内でこのオブジェクトの num の値を 256 にしようが、foo.num の値は変わりません。bar に新しいオブジェクトを代入した時点で、foo と bar、実引数と仮引数の参照先は異なってしまったからです。\"), \"\\n\", React.createElement(_components.p, null, \"この挙動は、実際の Java プログラムの挙動に合致します。\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"仮引数のオブジェクトに-null-を代入した場合\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BB%AE%E5%BC%95%E6%95%B0%E3%81%AE%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB-null-%E3%82%92%E4%BB%A3%E5%85%A5%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\",\n    \"aria-label\": \"仮引数のオブジェクトに null を代入した場合 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"仮引数のオブジェクトに null を代入した場合\"), \"\\n\", React.createElement(_components.p, null, \"ダメ押しの感はありますが、例をもう１つ。「参照の値渡し」で、メソッド先でオブジェクトに new を代入した場合のイメージです。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/null-into-formal-arg.png\",\n    alt: \"\"\n  }), \"\\r\\n参照の値渡しのため、仮引数 bar に null を代入した時点で bar の参照先情報は無くなります。ただし、参照渡しとは違い、foo の参照先は置き変わりません。\"), \"\\n\", React.createElement(_components.p, null, \"bar の参照先は無い（null）ので、bar.num にアクセスしようとすると NullPointerException が出ます。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"まとめ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%81%BE%E3%81%A8%E3%82%81\",\n    \"aria-label\": \"まとめ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"まとめ\"), \"\\n\", React.createElement(_components.p, null, \"最後に参照の値渡しの典型的なパターンを見て、メモリ内部の処理イメージをおさらいします。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./images/call-by-value-of-reference.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"実引数 foo オブジェクトをメソッドに渡すと、その参照の値、図の例では 1440 番が仮引数 bar に渡されます。これがまさに「参照の値渡し」です。\"), \"\\n\", React.createElement(_components.p, null, \"そしてメソッド内で、bar.num に 256 を代入するということは、ヒープ領域の 1440 番にアクセスし、オブジェクトの num の値を 256 に書き換えることになります。\"), \"\\n\", React.createElement(_components.p, null, \"すると、実引数と仮引数のフィールドの値が同じになり、あたかも参照渡しをしているような挙動に見えてしまいます。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、new や null を代入した例からも分かるように、内部的な処理は「参照の値渡し」で行われています。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"練習問題時間-20-分\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C%E6%99%82%E9%96%93-20-%E5%88%86\",\n    \"aria-label\": \"練習問題時間 20 分 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"練習問題（時間: 20 分）\"), \"\\n\", React.createElement(_components.p, null, \"プログラム実行結果が以下に示したようになる ArrayUpdater クラスを作成しなさい\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"main-メソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#main-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"main メソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"main メソッド\"), \"\\n\", React.createElement(_components.p, null, \"配列に 1 ～ 5 の整数を詰め込んで、updateArray メソッドで配列内の要素をすべて逆転させ、結果を表示する\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"updatearray-インスタンスメソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#updatearray-%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"updatearray インスタンスメソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"updateArray インスタンスメソッド\"), \"\\n\", React.createElement(_components.p, null, \"渡された配列内の要素を前後逆転させる\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"updatearray-の実行結果\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#updatearray-%E3%81%AE%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\",\n    \"aria-label\": \"updatearray の実行結果 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"updateArray の実行結果\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"5\\r\\n4\\r\\n3\\r\\n2\\r\\n1\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"解答例\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%A7%A3%E7%AD%94%E4%BE%8B\",\n    \"aria-label\": \"解答例 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"解答例\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/ArrayUpdater.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/42.call-by-value-and-call-by-reference/src/ArrayUpdater.java\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/entry/42-call-by-value-and-call-by-reference.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","p","strong","h3","pre","code","h4","img","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","color","meta","src","alt","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}