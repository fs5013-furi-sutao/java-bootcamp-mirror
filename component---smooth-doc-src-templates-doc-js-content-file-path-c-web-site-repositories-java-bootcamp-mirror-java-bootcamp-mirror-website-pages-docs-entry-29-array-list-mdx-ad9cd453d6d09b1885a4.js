"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2808],{50175:function(e,t,n){n.r(t),n.d(t,{default:function(){return s}});var r=n(63696),a=n(43023);function l(e){const t=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",h3:"h3",p:"p",pre:"pre",code:"code"},(0,a.RP)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,{id:"29-java-のリストarraylist-クラス",style:{position:"relative"}},r.createElement(t.a,{href:"#29-java-%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88arraylist-%E3%82%AF%E3%83%A9%E3%82%B9","aria-label":"29 java のリストarraylist クラス permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"29. Java のリスト（ArrayList クラス）"),"\n",r.createElement("p",{className:"goal"},"変長のリストとなるデータには配列ではなく、ArrayList\r\nのデータを使って処理を実装できるようになること。ArrayList は List\r\nインタフェースを実装していることを知る"),"\n",r.createElement(t.h2,{id:"学習",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AD%A6%E7%BF%92","aria-label":"学習 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"学習"),"\n",r.createElement(t.h3,{id:"java-のリストarraylist-クラスを知る",style:{position:"relative"}},r.createElement(t.a,{href:"#java-%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88arraylist-%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E7%9F%A5%E3%82%8B","aria-label":"java のリストarraylist クラスを知る permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Java のリスト（ArrayList クラス）を知る"),"\n",r.createElement(t.p,null,"リストは配列と同じように複数の値を格納することができるものです。\r\nただし、それぞれに特徴があります。一番大切な違いは配列が「固定長」で、リストが「可変長」であることです。"),"\n",r.createElement(t.p,null,"配列は一度要素数を決めると変更をすることができませんが、リストは自由に要素の追加・削除ができます。"),"\n",r.createElement(t.p,null,"これだけ読むと、自由が利くリストさえあれば配列は不要だと感じるかもしれません。\r\nしかし、そいうわけではありません。\r\nどちらにもメリット・デメリットがありますので、必要に応じて使い分けます。"),"\n",r.createElement(t.p,null,"両者の違いについてもっと詳しく知りたい場合はWebで調べてください。\r\n検索キーワードは、「 ",r.createElement(t.a,{href:"https://www.google.com/search?q=java+%E9%85%8D%E5%88%97+ArrayList+%E9%81%95%E3%81%84"},"java 配列 ArrayList 違い")," 」です。"),"\n",r.createElement(t.h2,{id:"arraylistの初期化",style:{position:"relative"}},r.createElement(t.a,{href:"#arraylist%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96","aria-label":"arraylistの初期化 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ArrayListの初期化"),"\n",r.createElement(t.p,null,"ArrayListを作る場合は次のように記述します。\r\nArrayListに赤線が表示されるはずですので、import文を追加しておきましょう。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},"ArrayList<Integer> list = new ArrayList<Integer>();\n")),"\n",r.createElement(t.p,null,"配列と同様にどんな種類の値を入れるかを初期化時に決める必要があります。\r\nデータ型は < > の中に記述をしますが、整数を入れたい場合は ",r.createElement(t.code,null,"int")," ではなく ",r.createElement(t.code,null,"Integer")," と記述をする必要があります。"),"\n",r.createElement(t.p,null,"Integerはint型のラッパークラスです。現時点ではあまり深く理解する必要はありませんが、byte、boolean、charなどにはそれぞれ対応するラッパークラスが存在します。\r\nArrayListを使う場合はそのラッパークラスを使う必要があるということだけを抑えておきましょう。"),"\n",r.createElement(t.p,null,"ラッパークラスの一覧を見たい場合はWebで調べてください。検索キーワードは、「 ",r.createElement(t.a,{href:"https://www.google.com/search?q=java+%E3%83%A9%E3%83%83%E3%83%91%E3%83%BC%E3%82%AF%E3%83%A9%E3%82%B9"},"java ラッパークラス")," 」です。"),"\n",r.createElement(t.p,null,"また、ArrayListを初期化する場合は、次のように左辺を ",r.createElement(t.code,null,"List")," にすることもできます。\r\nなぜこのような書き方ができるかを理解するためにはオブジェクト指向の概念を理解する必要がありますので、現時点ではあまり深掘りせずに記述の仕方だけを覚えておきましょう。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},"List<Integer> list = new ArrayList<Integer>();\n")),"\n",r.createElement(t.h2,{id:"要素を追加",style:{position:"relative"}},r.createElement(t.a,{href:"#%E8%A6%81%E7%B4%A0%E3%82%92%E8%BF%BD%E5%8A%A0","aria-label":"要素を追加 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"要素を追加"),"\n",r.createElement(t.p,null,"ArrayListに要素を追加する場合は、",r.createElement(t.code,null,"add()")," メソッドを使います。\r\n次のように記述をすると10、25、40をリストに追加することができます。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},"List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\n")),"\n",r.createElement(t.h2,{id:"arraylistの出力",style:{position:"relative"}},r.createElement(t.a,{href:"#arraylist%E3%81%AE%E5%87%BA%E5%8A%9B","aria-label":"arraylistの出力 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ArrayListの出力"),"\n",r.createElement(t.p,null,"ArrayListの値を表示する場合は次のように書くことができます。\r\n要素を一つ取得して表示する場合は、",r.createElement(t.code,null,"get()")," メソッドを使います。\r\n引数としてインデックス（要素番号）を渡すことで要素の値を取得することができます。"),"\n",r.createElement(t.p,null,"また、",r.createElement(t.code,null,"println()"),"などの出力メソッドにリスト名を直接記述することでリスト内の全ての要素をまとめて出力することができます。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\r\n\r\nSystem.out.printf("添え字を指定して要素を出力: %d \\n", list.get(1));\r\n\r\nSystem.out.println("全ての要素を取得");\r\nSystem.out.println(list);\n')),"\n",r.createElement(t.h3,{id:"実行結果",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C","aria-label":"実行結果 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"添え字を指定して要素を出力: 25 \r\n全ての要素を取得\r\n[10, 25, 40]\n")),"\n",r.createElement(t.h2,{id:"要素の挿入",style:{position:"relative"}},r.createElement(t.a,{href:"#%E8%A6%81%E7%B4%A0%E3%81%AE%E6%8C%BF%E5%85%A5","aria-label":"要素の挿入 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"要素の挿入"),"\n",r.createElement(t.p,null,"ArrayListは最後尾に要素を追加するだけではなく、指定した位置に要素を挿入することもできます。\r\nリストの最後尾に要素を追加するときと同じように ",r.createElement(t.code,null,"add()")," メソッドを使いますが、挿入時は挿入位置のインデックスも指定する必要があります。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\r\n\r\nSystem.out.println("挿入前の出力");\r\nSystem.out.println(list);\r\n\r\nlist.add(2, 50);\r\n\r\nSystem.out.println("挿入後の出力");\r\nSystem.out.println(list);\n')),"\n",r.createElement(t.h3,{id:"実行結果-1",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-1","aria-label":"実行結果 1 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"挿入前の出力\r\n[10, 25, 40]\r\n挿入後の出力\r\n[10, 25, 50, 40]\n")),"\n",r.createElement(t.h2,{id:"要素の削除",style:{position:"relative"}},r.createElement(t.a,{href:"#%E8%A6%81%E7%B4%A0%E3%81%AE%E5%89%8A%E9%99%A4","aria-label":"要素の削除 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"要素の削除"),"\n",r.createElement(t.p,null,"ArrayListから要素を削除する場合は、",r.createElement(t.code,null,"remove()")," メソッドを使います。\r\n引数としてインデックスを渡すことで要素を削除することができます。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\r\n\r\nSystem.out.println("削除前の出力");\r\nSystem.out.println(list);\r\n\r\nlist.remove(1);\r\n\r\nSystem.out.println("削除後の出力");\r\nSystem.out.println(list);\n')),"\n",r.createElement(t.h3,{id:"実行結果-2",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-2","aria-label":"実行結果 2 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"削除前の出力\r\n[10, 25, 40]\r\n削除後の出力\r\n[10, 40]\n")),"\n",r.createElement(t.h2,{id:"要素の上書き",style:{position:"relative"}},r.createElement(t.a,{href:"#%E8%A6%81%E7%B4%A0%E3%81%AE%E4%B8%8A%E6%9B%B8%E3%81%8D","aria-label":"要素の上書き permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"要素の上書き"),"\n",r.createElement(t.p,null,"ArrayListの要素の値を上書きする場合は、",r.createElement(t.code,null,"set()")," メソッドを使います。\r\n引数として、上書きしたい要素のインデックスと設定したい値を渡すことで上書きをすることができます。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\r\n\r\nSystem.out.println("上書き前の出力");\r\nSystem.out.println(list);\r\n\r\nlist.set(1, 50);\r\n\r\nSystem.out.println("上書き後の出力");\r\nSystem.out.println(list);\n')),"\n",r.createElement(t.h3,{id:"実行結果-3",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-3","aria-label":"実行結果 3 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"上書き前の出力\r\n[10, 25, 40]\r\n上書き後の出力\r\n[10, 50, 40]\n")),"\n",r.createElement(t.h2,{id:"要素の検索",style:{position:"relative"}},r.createElement(t.a,{href:"#%E8%A6%81%E7%B4%A0%E3%81%AE%E6%A4%9C%E7%B4%A2","aria-label":"要素の検索 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"要素の検索"),"\n",r.createElement(t.p,null,"ArrayListには要素の検索をする機能もあります。\r\nリストの先頭から確認し、指定した値と最初に一致する要素のインデックスを返す ",r.createElement(t.code,null,"indexOf()")," メソッドと最後に一致する要素のインデックスを返す ",r.createElement(t.code,null,"lastIndexOf()")," メソッドがあります。"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},'List<Integer> list = new ArrayList<Integer>();\r\n\r\nlist.add(10);\r\nlist.add(25);\r\nlist.add(40);\r\nlist.add(20);\r\nlist.add(25);\r\n\r\nSystem.out.printf("25が最初に一致したのは %d 番目の要素 \\n", list.indexOf(25));\r\nSystem.out.printf("25が最後に一致したのは %d 番目の要素 \\n", list.lastIndexOf(25));\n')),"\n",r.createElement(t.h3,{id:"実行結果-4",style:{position:"relative"}},r.createElement(t.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-4","aria-label":"実行結果 4 permalink",className:"anchor before"},r.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"25が最初に一致したのは 1 番目の要素 \r\n25が最後に一致したのは 4 番目の要素\n")))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.RP)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)};function c(e){let{children:t}=e;return t}function s(e){return r.createElement(c,e,r.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-entry-29-array-list-mdx-ad9cd453d6d09b1885a4.js.map