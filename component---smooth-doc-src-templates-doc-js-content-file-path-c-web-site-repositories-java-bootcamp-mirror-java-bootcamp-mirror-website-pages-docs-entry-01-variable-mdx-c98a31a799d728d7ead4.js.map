{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-entry-01-variable-mdx-c98a31a799d728d7ead4.js","mappings":"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","sources":["webpack://website/./pages/docs/entry/01-variable.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"01-java-の変数\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#01-java-%E3%81%AE%E5%A4%89%E6%95%B0\",\n    \"aria-label\": \"01 java の変数 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"01. Java の変数\"), \"\\n\", React.createElement(\"p\", {\n    className: \"goal\"\n  }, \"変数を使えるようになること\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"学習\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AD%A6%E7%BF%92\",\n    \"aria-label\": \"学習 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"学習\"), \"\\n\", React.createElement(_components.p, null, \"変数とは何かを Web で調べてください。検索キーワードは、「 \", React.createElement(_components.a, {\n    href: \"https://www.google.com/search?q=java+%E5%A4%89%E6%95%B0\"\n  }, \"java 変数\"), \" 」です。\\r\\n3 種類ぐらい説明記事やサンプルコードを読んで、変数とは何かをつかみましょう。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"変数の使い方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A4%89%E6%95%B0%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\",\n    \"aria-label\": \"変数の使い方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"変数の使い方\"), \"\\n\", React.createElement(_components.p, null, \"変数の概念を説明する際には、「箱」に例えることが多いです。ここでは変数の使い方を確認していきます。\"), \"\\n\", React.createElement(_components.p, null, \"変数を使う場合はまず初めに変数を作る必要があります。変数を作ることを「宣言」といいます。\"), \"\\n\", React.createElement(_components.p, null, \"変数の宣言ができたら値を入れます。変数に値を入れることを「代入」といいます。\"), \"\\n\", React.createElement(_components.p, null, \"そして、変数に入れた値を使うことを「参照」と言います。\"), \"\\n\", React.createElement(_components.p, null, \"続いて宣言、代入、参照のそれぞれのやり方を確認しましょう。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"変数の宣言\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A4%89%E6%95%B0%E3%81%AE%E5%AE%A3%E8%A8%80\",\n    \"aria-label\": \"変数の宣言 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"変数の宣言\"), \"\\n\", React.createElement(_components.p, null, \"変数を宣言する場合は、変数にどのような種類の値を入れるかを記述する必要がある。\"), \"\\n\", React.createElement(_components.p, null, \"整数を入れたい場合は\", React.createElement(_components.code, null, \"int\"), \"型、文字列を入れたい場合は\", React.createElement(_components.code, null, \"String\"), \"型というように記述します。この種類のことを「データ型」と呼びます。\"), \"\\n\", React.createElement(_components.p, null, \"下の例でint型の変数\", React.createElement(_components.code, null, \"number\"), \"とString型の変数\", React.createElement(_components.code, null, \"word\"), \"を宣言している。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class Variable {\\r\\n    public static void main(String[] args) {\\r\\n        int number;\\r\\n        String word;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"この例では\", React.createElement(_components.code, null, \"number\"), \"と\", React.createElement(_components.code, null, \"word\"), \"は変数を識別ために付ける名前（変数名）です。変数名はプログラムの作成者が決めることができます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"変数に値を代入\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A4%89%E6%95%B0%E3%81%AB%E5%80%A4%E3%82%92%E4%BB%A3%E5%85%A5\",\n    \"aria-label\": \"変数に値を代入 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"変数に値を代入\"), \"\\n\", React.createElement(_components.p, null, \"下の例ではそれぞれの変数に値を代入しています。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class Variable {\\r\\n    public static void main(String[] args) {\\r\\n        int number;\\r\\n        String word;\\r\\n\\r\\n        number = 15;\\r\\n        word = \\\"Hello\\\";\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"ここで注意が必要なのは「文字列」を扱う場合にダブルクォートで囲む必要があることです。\\r\\n文字列にダブルクォートを付けることでプログラムである部分とそうでない部分の区別を付けています。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"変数の値を出力\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A4%89%E6%95%B0%E3%81%AE%E5%80%A4%E3%82%92%E5%87%BA%E5%8A%9B\",\n    \"aria-label\": \"変数の値を出力 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"変数の値を出力\"), \"\\n\", React.createElement(_components.p, null, \"下の例はそれぞれの変数の値を画面に出力をしています。\"), \"\\n\", React.createElement(_components.p, null, \"出力には出力メソッドを使います。Javaでは主にprint、println、printfメソッドを使います。\\r\\nそれぞれの違いや使い方をWebで調べてください。検索キーワードは、「 \", React.createElement(_components.a, {\n    href: \"https://www.google.com/search?q=java+%E5%87%BA%E5%8A%9B%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\"\n  }, \"java 出力メソッド\"), \" 」です。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class Variable {\\r\\n    public static void main(String[] args) {\\r\\n        int number;\\r\\n        String word;\\r\\n\\r\\n        number = 15;\\r\\n        word = \\\"Hello\\\";\\r\\n\\r\\n        System.out.println(number);\\r\\n        System.out.println(word);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"プログラム実行結果\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\",\n    \"aria-label\": \"プログラム実行結果 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"プログラム実行結果\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"15\\r\\nHello\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"変数の初期化\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A4%89%E6%95%B0%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96\",\n    \"aria-label\": \"変数の初期化 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"変数の初期化\"), \"\\n\", React.createElement(_components.p, null, \"変数を宣言する時点で既に代入したい値が決まっている場合は、「宣言」と「代入」を同時に行うことができます。このことを「初期化」と言います。\"), \"\\n\", React.createElement(_components.p, null, \"下の例は初期化を使ってプログラムを書き換えたものです。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"public class Variable {\\r\\n    public static void main(String[] args) {\\r\\n        int number = 15;\\r\\n        String word = \\\"Hello\\\";\\r\\n\\r\\n        System.out.println(number);\\r\\n        System.out.println(word);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"練習問題時間-20-分\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C%E6%99%82%E9%96%93-20-%E5%88%86\",\n    \"aria-label\": \"練習問題時間 20 分 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"練習問題（時間: 20 分）\"), \"\\n\", React.createElement(_components.p, null, \"main メソッドに以下の 2 つの処理を記述して、プログラム実行結果が以下に示したようになるようにプログラムを作成しなさい。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"1-変数宣言変数への代入処理\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%E5%A4%89%E6%95%B0%E5%AE%A3%E8%A8%80%E5%A4%89%E6%95%B0%E3%81%B8%E3%81%AE%E4%BB%A3%E5%85%A5%E5%87%A6%E7%90%86\",\n    \"aria-label\": \"1 変数宣言変数への代入処理 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 変数宣言、変数への代入処理:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"int型の変数「fatherAge」を宣言\"), \"\\n\", React.createElement(_components.li, null, \"変数「fatherAge」に 42 を代入\"), \"\\n\", React.createElement(_components.li, null, \"int型の変数「motherAge」を宣言\"), \"\\n\", React.createElement(_components.li, null, \"変数「motherAge」に 38 を代入\"), \"\\n\", React.createElement(_components.li, null, \"int型の変数「myAge」を 20 で初期化\"), \"\\n\", React.createElement(_components.li, null, \"int型の変数「myWeightKg」を 670 で初期化\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-変数に代入した数値の表示処理\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-%E5%A4%89%E6%95%B0%E3%81%AB%E4%BB%A3%E5%85%A5%E3%81%97%E3%81%9F%E6%95%B0%E5%80%A4%E3%81%AE%E8%A1%A8%E7%A4%BA%E5%87%A6%E7%90%86\",\n    \"aria-label\": \"2 変数に代入した数値の表示処理 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. 変数に代入した数値の表示処理:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"「fatherAge」を表示\"), \"\\n\", React.createElement(_components.li, null, \"「motherAge」を表示\"), \"\\n\", React.createElement(_components.li, null, \"「myAge」を表示\"), \"\\n\", React.createElement(_components.li, null, \"「myWeightKg」を表示\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"プログラム実行結果-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-1\",\n    \"aria-label\": \"プログラム実行結果 1 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"プログラム実行結果\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ぼくのパパの年齢は 42 歳です.\\r\\nぼくのママの年齢は 38 歳です.\\r\\nぼくの年齢は 20 歳です.\\r\\nぼくの体重は 670Kg です.\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"解答例\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%A7%A3%E7%AD%94%E4%BE%8B\",\n    \"aria-label\": \"解答例 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"解答例\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/01.variables/src/ShowFamilyInfo.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/02.entry/01.variables/src/ShowFamilyInfo.java\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/entry/01-variable.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","p","h3","code","pre","ul","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}