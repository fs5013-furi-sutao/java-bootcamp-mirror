"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2204],{89948:function(e,n,r){r.r(n),r.d(n,{default:function(){return o}});var t=r(63696),a=r(43023);function l(e){const n=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",p:"p",pre:"pre",code:"code",h3:"h3",ul:"ul",li:"li",br:"br"},(0,a.RP)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.h1,{id:"04-ネストを深くしない",style:{position:"relative"}},t.createElement(n.a,{href:"#04-%E3%83%8D%E3%82%B9%E3%83%88%E3%82%92%E6%B7%B1%E3%81%8F%E3%81%97%E3%81%AA%E3%81%84","aria-label":"04 ネストを深くしない permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"04. ネストを深くしない"),"\n",t.createElement("p",{className:"goal"},"ループや if 文のネストを深くすると、処理が追いにくいコードになることを実感し、\r\nネストの階層は 2 階層までにとどめる感覚が持てること"),"\n",t.createElement(n.h2,{id:"ネストを深くすることは悪いことだと知る",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%83%8D%E3%82%B9%E3%83%88%E3%82%92%E6%B7%B1%E3%81%8F%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%AF%E6%82%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%A0%E3%81%A8%E7%9F%A5%E3%82%8B","aria-label":"ネストを深くすることは悪いことだと知る permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ネストを深くすることは悪いことだと知る"),"\n",t.createElement(n.p,null,"深すぎるネストはバグの温床になりやすいです。\r\nできるだけ浅くする努力をしましょう。"),"\n",t.createElement(n.p,null,"ネストとはコードブロックがいくつも入れ子のなっていく状態のことです。"),"\n",t.createElement(n.p,null,"例えば、以下のようなイメージです。以下の例では、ネストが 3 層以上になっています。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=典型的なネスト構造"},"while (condition) {\r\n    // processes\r\n\r\n    if (condition) {\r\n        // processes\r\n\r\n        if (condition) {\r\n            // processes\r\n\r\n            if (condition) {\r\n                // processes\r\n            } else if (condition) {\r\n                // processes\r\n            } else {\r\n                // processes\r\n            }\r\n        }\r\n    }\r\n}\n")),"\n",t.createElement(n.p,null,"ネストが 3 層以上になると、さすがに処理が追いかけづらくなります。"),"\n",t.createElement(n.h2,{id:"ネストは何層ぐらいまでなら許されるの",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%83%8D%E3%82%B9%E3%83%88%E3%81%AF%E4%BD%95%E5%B1%A4%E3%81%90%E3%82%89%E3%81%84%E3%81%BE%E3%81%A7%E3%81%AA%E3%82%89%E8%A8%B1%E3%81%95%E3%82%8C%E3%82%8B%E3%81%AE","aria-label":"ネストは何層ぐらいまでなら許されるの permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ネストは何層ぐらいまでなら許されるの？"),"\n",t.createElement(n.p,null,"ネストは、2 層までに留めたいです。それより深くなると、処理の流れを読むのに苦労するからです。"),"\n",t.createElement(n.h2,{id:"実例を読みやすくなるように段階的にリファクタリング",style:{position:"relative"}},t.createElement(n.a,{href:"#%E5%AE%9F%E4%BE%8B%E3%82%92%E8%AA%AD%E3%81%BF%E3%82%84%E3%81%99%E3%81%8F%E3%81%AA%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E6%AE%B5%E9%9A%8E%E7%9A%84%E3%81%AB%E3%83%AA%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0","aria-label":"実例を読みやすくなるように段階的にリファクタリング permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実例を読みやすくなるように段階的にリファクタリング"),"\n",t.createElement(n.p,null,"後の項目「ガード節・早期リターン」でリファクタリングの技術的なことはやっていくので、\r\nここでは軽く、ネストを深くしないようにするにはどうすればいいかを掴んでいきます。"),"\n",t.createElement(n.p,null,"次の例もネストが 3 層になっていて処理が分かりにくいです。\r\nこれを段階を追って、改善していきます。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例①：リファクタリングの題材"},"public void function() {\r\n    if (!errorFlag) {\r\n        for (int i = 0; i < array.length; i++) {\r\n            if (array[i] != null) {\r\n                if (hogehoge) {\r\n                    // processes\r\n                } else {\r\n                    // processes\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n")),"\n",t.createElement(n.h3,{id:"1-早期リターン",style:{position:"relative"}},t.createElement(n.a,{href:"#1-%E6%97%A9%E6%9C%9F%E3%83%AA%E3%82%BF%E3%83%BC%E3%83%B3","aria-label":"1 早期リターン permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 早期リターン"),"\n",t.createElement(n.p,null,"まず、最初にエラーだった時点で return してしまいます。\r\nたったこれだけで、一階層減ります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例①：1.早期リターンさせる"},"public void function() {\r\n\r\n    if (errorFlag) return;\r\n\r\n    for (int i = 0; i < array.length; i++) {\r\n        if (array[i] != null) {\r\n            if (hogehoge) {\r\n                // processes\r\n            } else {\r\n                // processes\r\n            }\r\n        }\r\n    }\r\n}\n")),"\n",t.createElement(n.h3,{id:"2-ガード節",style:{position:"relative"}},t.createElement(n.a,{href:"#2-%E3%82%AC%E3%83%BC%E3%83%89%E7%AF%80","aria-label":"2 ガード節 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. ガード節"),"\n",t.createElement(n.p,null,"次に、ループの中で何もしなくていい場合は continue します。\r\nこれで、いとも簡単にもう一階層減ります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例①：2.ガード節を使う"},"public void function() {\r\n\r\n    if (errorFlag) return;\r\n\r\n    for (int i = 0; i < array.length; i++) {\r\n\r\n        if (array[i] == null) continue;\r\n\r\n        if (hogehoge) {\r\n            // processes\r\n        } else {\r\n            // processes\r\n        }\r\n    }\r\n}\n")),"\n",t.createElement(n.h3,{id:"3-さらにガード節",style:{position:"relative"}},t.createElement(n.a,{href:"#3-%E3%81%95%E3%82%89%E3%81%AB%E3%82%AC%E3%83%BC%E3%83%89%E7%AF%80","aria-label":"3 さらにガード節 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. さらにガード節"),"\n",t.createElement(n.p,null,"最後に、余分な else 文を取ればこのメソッドは完成です。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例①：3.さらにガード節を使う"},"public void function() {\r\n\r\n    if (errorFlag) return;\r\n\r\n    for (int i = 0; i < array.length; i++) {\r\n\r\n        if (array[i] == null) continue;\r\n\r\n        if (hogehoge) {\r\n            // processes\r\n            continue;\r\n        }\r\n\r\n        // processes\r\n    }\r\n}\n")),"\n",t.createElement(n.h2,{id:"なぜネストが深くなるのか",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%81%AA%E3%81%9C%E3%83%8D%E3%82%B9%E3%83%88%E3%81%8C%E6%B7%B1%E3%81%8F%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%8B","aria-label":"なぜネストが深くなるのか permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"なぜネストが深くなるのか"),"\n",t.createElement(n.p,null,"ネストを深くする人は自分で書いていて読みにくくないのだろうか。\r\nネストを深くする人は、次のような前段処理をしていないという印象を受けます。"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"次の処理に向かう前に弾けるケースを先にはじいていない"),"\n",t.createElement(n.li,null,"スキップできる処理を最初にスキップさせていない"),"\n"),"\n",t.createElement(n.p,null,"複雑な条件分岐がネストしてしまう場合は、わざわざ難しい方法や順序で分岐判定を行っていないか、\r\n少し立ち止まって考えてみるべきです。"),"\n",t.createElement(n.h3,{id:"ロジックを整理してみよう",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%83%AD%E3%82%B8%E3%83%83%E3%82%AF%E3%82%92%E6%95%B4%E7%90%86%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86","aria-label":"ロジックを整理してみよう permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"ロジックを整理してみよう"),"\n",t.createElement(n.p,null,"処理を書く前に判定ロジックを整理する、\r\nそして処理を書いた後に判定ロジックはこれで大丈夫なのか\r\nを確認する意識や感覚を持ちましょう。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例②：本当にこれで判定ロジックは大丈夫？"},"public int function(int a, int b) {\r\n    int result;\r\n\r\n    if (a > 10) {\r\n\r\n        if (a > 20) {\r\n\r\n            if (a > 30) {\r\n                result = b;\r\n\r\n            } else {\r\n                result = 3;\r\n            }\r\n\r\n        } else {\r\n            result = 2;\r\n        }\r\n\r\n    } else {\r\n        result = 1;\r\n    }\r\n\r\n    return result;\r\n}\n")),"\n",t.createElement(n.p,null,"これは以下のように書けます。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例②：リファクタリング後"},"public int function(int a, int b){\r\n    if (a < 10) return 1;\r\n    if (a < 20) return 2;\r\n    if (a < 30) return 3;\r\n    return b;\r\n}\n")),"\n",t.createElement(n.h3,{id:"エラーチェックの場合",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%81%AE%E5%A0%B4%E5%90%88","aria-label":"エラーチェックの場合 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"エラーチェックの場合"),"\n",t.createElement(n.p,null,"意図したデータが与えられたかどうかのチェックを行うたびに、\r\n判定ロジックがネストされるケースは良くあります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例③：データが適正かどうかの判定ロジック"},"public boolean isValid(Data data) {\r\n\r\n    if(data != null) {\r\n\r\n        if(data.count() > 0) {\r\n\r\n            if(!data.isError()) {\r\n\r\n                if (data.getResult() != null) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\n")),"\n",t.createElement(n.p,null,"これは以下のように簡潔に書くと条件判定が読みやすくなります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=例③：リファクタリング後"},"public boolean isValid(Data data) {\r\n    if (data == null) return false;\r\n    if (data.count() == 0) return false;\r\n    if (data.isError == null) return false;\r\n    if (data.getResult() != null) return true;\r\n    return false;\r\n}\n")),"\n",t.createElement(n.h2,{id:"練習問題時間-20-分",style:{position:"relative"}},t.createElement(n.a,{href:"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C%E6%99%82%E9%96%93-20-%E5%88%86","aria-label":"練習問題時間 20 分 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"練習問題（時間: 20 分）"),"\n",t.createElement(n.p,null,"次のクラス Rent について isValid メソッドのネストを減らすようにリファクタリングしなさい"),"\n",t.createElement(n.p,null,"リファクタリング元コード",t.createElement(n.br),"\n",t.createElement(n.a,{href:"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/04.dont-make-nest-too-deep/src/Rent.java"},"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/04.dont-make-nest-too-deep/src/Rent.java")),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java",meta:"title=src/Rent.java"},'public class Rent {\r\n    public static void main(String[] args) {\r\n\r\n        Rent app = new Rent();\r\n\r\n        RentalInfo yamamotoInfo = new RentalInfo(\r\n                "山本一郎", "aa", "bb", "10", "2000"\r\n            );\r\n\r\n        RentalInfo yamadaInfo = new RentalInfo(\r\n                "山田太郎", "aa", "bb", "80", "2000"\r\n            );\r\n\r\n        RentalInfo yamaguchiInfo = new RentalInfo(\r\n                "山口次郎", "aa", "bb", "15", "500"\r\n            );\r\n\r\n        app.doRegistration(yamamotoInfo);\r\n        app.doRegistration(yamadaInfo);\r\n        app.doRegistration(yamaguchiInfo);\r\n    }\r\n\r\n    private void doRegistration(RentalInfo info) {\r\n\r\n        System.out.println("-----");\r\n        System.out.printf(\r\n            "%s さんの登録審査をします. %n", info.name\r\n        );\r\n\r\n        if (isValid(info)) {\r\n            info.registerRentalProperty();\r\n        } else {\r\n            System.out.println(\r\n                "賃貸情報を登録できませんでした."\r\n            );\r\n        }\r\n\r\n        System.out.println();\r\n    }\r\n\r\n    public boolean isValid(RentalInfo info) {\r\n\r\n        boolean isValid = false;\r\n\r\n        // 沿線未入力チェック\r\n        if (info.wayside == null) {\r\n            System.out.println("沿線が未入力です.");\r\n\r\n        } else {\r\n            // 最寄駅未入力チェック\r\n            if (info.nearestStation == null) {\r\n                System.out.println("最寄駅が未入力です.");\r\n\r\n            } else {\r\n                // 徒歩（分）未入力チェック\r\n                if (info.onFootMinutes == null) {\r\n                    System.out.println("徒歩が未入力です.");\r\n\r\n                } else if (!isNumeric(info.onFootMinutes)) {\r\n                    System.out.println(\r\n                        "徒歩には数値を入力してください."\r\n                    );\r\n\r\n                } else if (\r\n                        !isNumericRange(\r\n                            info.onFootMinutes, 0, 60\r\n                        )\r\n                    ) {\r\n\r\n                    System.out.println(\r\n                        "徒歩は0分以上60分以下を"\r\n                            + "入力してください."\r\n                    );\r\n\r\n                } else {\r\n                    // 賃料未入力チェック\r\n                    if (info.monthlyRent == null) {\r\n                        System.out.println(\r\n                            "賃料が未入力です."\r\n                        );\r\n\r\n                    } else if (\r\n                            !isNumeric(info.monthlyRent)\r\n                        ) {\r\n\r\n                        System.out.println(\r\n                            "徒歩には数値を入力してください."\r\n                        );\r\n\r\n                    } else if (\r\n                            !isNumericRange(\r\n                                info.monthlyRent,\r\n                                1000, 200000\r\n                            )\r\n                        ) {\r\n\r\n                        System.out.println(\r\n                            "徒歩は1,000円以上200,000円以下を"\r\n                                + "入力してください."\r\n                        );\r\n\r\n                    } else {\r\n                        isValid = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    public boolean isNumeric(String target) {\r\n        String regexNumeric = "[+-]?\\\\d*(\\\\.\\\\d+)?";\r\n        boolean isNumeric = target.matches(regexNumeric);\r\n        return isNumeric;\r\n    }\r\n\r\n    public boolean isNumericRange(\r\n            String target, int from, int to\r\n        ) {\r\n\r\n        int intTarget = Integer.parseInt(target);\r\n        return intTarget >= from && intTarget <= to;\r\n    }\r\n}\r\n\r\nclass RentalInfo {\r\n    public String name = "";\r\n    public String wayside = "";\r\n    public String nearestStation = "";\r\n    public String onFootMinutes = "";\r\n    public String monthlyRent = "";\r\n\r\n    public RentalInfo(\r\n            String name, String wayside,\r\n            String nearestStation, String onFootMinutes,\r\n            String monthlyRent\r\n        ) {\r\n\r\n        this.name = name;\r\n        this.wayside = wayside;\r\n        this.nearestStation = nearestStation;\r\n        this.onFootMinutes = onFootMinutes;\r\n        this.monthlyRent = monthlyRent;\r\n    }\r\n\r\n    public void registerRentalProperty() {\r\n        System.out.println("賃貸情報を登録しました.");\r\n    }\r\n}\n')),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-txt",meta:"title=Rentクラスの実行結果"},"-----\r\n山本一郎 さんの登録審査をします.\r\n賃貸情報を登録しました.\r\n-----\r\n山田太郎 さんの登録審査をします.\r\n徒歩は0分以上60分以下を入力してください.\r\n賃貸情報を登録できませんでした.\r\n\r\n-----\r\n山口次郎 さんの登録審査をします.\r\n徒歩は1,000円以上200,000円以下を入力してください.\r\n賃貸情報を登録できませんでした.\r\n\n")),"\n",t.createElement(n.h2,{id:"解答例",style:{position:"relative"}},t.createElement(n.a,{href:"#%E8%A7%A3%E7%AD%94%E4%BE%8B","aria-label":"解答例 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"解答例"),"\n",t.createElement(n.p,null,t.createElement(n.a,{href:"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/04.dont-make-nest-too-deep/src/RefactoringRent.java"},"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/04.dont-make-nest-too-deep/src/RefactoringRent.java")))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.RP)(),e.components);return n?t.createElement(n,e,t.createElement(l,e)):l(e)};function c(e){let{children:n}=e;return n}function o(e){return t.createElement(c,e,t.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-primary-04-dont-make-nest-too-deep-mdx-63900950e88fee0647f3.js.map