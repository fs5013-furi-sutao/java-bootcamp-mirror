"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7060],{24522:function(e,n,a){a.r(n),a.d(n,{default:function(){return m}});var r=a(63696),t=a(43023);function l(e){const n=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",h3:"h3",p:"p",pre:"pre",code:"code",ol:"ol",li:"li"},(0,t.RP)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.h1,{id:"18-列挙子-enum-の使い方発展",style:{position:"relative"}},r.createElement(n.a,{href:"#18-%E5%88%97%E6%8C%99%E5%AD%90-enum-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E7%99%BA%E5%B1%95","aria-label":"18 列挙子 enum の使い方発展 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"18. 列挙子 Enum の使い方（発展）"),"\n",r.createElement("p",{className:"goal"},"Enum コンストラクタで定数に複数の設定値を設定し、その enum\r\nを利用できようになること"),"\n",r.createElement(n.h2,{id:"学習",style:{position:"relative"}},r.createElement(n.a,{href:"#%E5%AD%A6%E7%BF%92","aria-label":"学習 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"学習"),"\n",r.createElement(n.h3,{id:"enum-コンストラクタを知る",style:{position:"relative"}},r.createElement(n.a,{href:"#enum-%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%82%92%E7%9F%A5%E3%82%8B","aria-label":"enum コンストラクタを知る permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Enum コンストラクタを知る"),"\n",r.createElement(n.p,null,"Enum コンストラクタとは何かを Web で調べてください。\r\n検索キーワードは、「 ",r.createElement(n.a,{href:"https://www.google.com/search?q=java+enum+%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF"},"java enum コンストラクタ")," 」です。\r\n3 種類ぐらい説明記事やサンプルコードを読んで、Enum コンストラクタとは何か、Enum コンストラクタの使い方をつかみましょう。"),"\n",r.createElement(n.h2,{id:"enum-をフル活用する方法",style:{position:"relative"}},r.createElement(n.a,{href:"#enum-%E3%82%92%E3%83%95%E3%83%AB%E6%B4%BB%E7%94%A8%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95","aria-label":"enum をフル活用する方法 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Enum をフル活用する方法"),"\n",r.createElement(n.p,null,"ここでは、日本の硬貨を例にして、Enum の発展した使い方を見ていく。"),"\n",r.createElement(n.p,null,"日本の硬貨を enum にすると次のようになる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},"enum CoinType {\r\n    ONE,\r\n    FIVE,\r\n    TEN,\r\n    FIFTY,\r\n    HUNDRED,\r\n    FIVE_HUNDRED,\r\n    ;\r\n}\n")),"\n",r.createElement(n.h2,{id:"定数と値を対応させる",style:{position:"relative"}},r.createElement(n.a,{href:"#%E5%AE%9A%E6%95%B0%E3%81%A8%E5%80%A4%E3%82%92%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B","aria-label":"定数と値を対応させる permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"定数と値を対応させる"),"\n",r.createElement(n.p,null,"このままでは定義だけで、金額といった実際に使い道のある値への対応づけができていない。"),"\n",r.createElement(n.p,null,"enum 値（インスタンス）と int 値を対応づけたい場合は、クラスと同じようにコンストラクタを使ってフィールドへ値を代入する。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},"enum CoinType {\r\n    ONE(1),\r\n    FIVE(5),\r\n    TEN(10),\r\n    FIFTY(50),\r\n    HUNDRED(100),\r\n    FIVE_HUNDRED(500),\r\n    ;\r\n\r\n    private int price;\r\n\r\n    CoinType(int price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public int getPrice() {\r\n        return this.price;\r\n    }\r\n}\n")),"\n",r.createElement(n.h3,{id:"private-なコンストラクタ",style:{position:"relative"}},r.createElement(n.a,{href:"#private-%E3%81%AA%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF","aria-label":"private なコンストラクタ permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"private なコンストラクタ"),"\n",r.createElement(n.p,null,"ただし、注意してほしいのは enum のコンストラクタは private を記述しなくても、暗黙的に private になること。"),"\n",r.createElement(n.p,null,"なぜなら、各 Enum 値（インスタンス）は、実行されるプログラム中でただ 1 つになることを保障しなければならないように設計されているからである。"),"\n",r.createElement(n.h3,{id:"定数それぞれがフィールドを持っている",style:{position:"relative"}},r.createElement(n.a,{href:"#%E5%AE%9A%E6%95%B0%E3%81%9D%E3%82%8C%E3%81%9E%E3%82%8C%E3%81%8C%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%82%92%E6%8C%81%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B","aria-label":"定数それぞれがフィールドを持っている permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"定数それぞれがフィールドを持っている"),"\n",r.createElement(n.p,null,"Enum は内部的には、特殊なクラスとして扱われている。"),"\n",r.createElement(n.p,null,"上記のコード例から分かるように、定数それぞれがフィールドを持ったインスタンスになっている。"),"\n",r.createElement(n.h2,{id:"さらに複数の値を対応づける",style:{position:"relative"}},r.createElement(n.a,{href:"#%E3%81%95%E3%82%89%E3%81%AB%E8%A4%87%E6%95%B0%E3%81%AE%E5%80%A4%E3%82%92%E5%AF%BE%E5%BF%9C%E3%81%A5%E3%81%91%E3%82%8B","aria-label":"さらに複数の値を対応づける permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"さらに複数の値を対応づける"),"\n",r.createElement(n.p,null,"使い勝手を良くするために、フィールド jpName を追加する。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'enum CoinType {\r\n    ONE("1円玉", 1),\r\n    FIVE("5円玉", 5),\r\n    TEN("10円玉", 10),\r\n    FIFTY("50円玉", 50),\r\n    HUNDRED("100円玉", 100),\r\n    FIVE_HUNDRED("500円玉", 500),\r\n    ;\r\n\r\n    private String jpName;\r\n    private int price;\r\n\r\n    CoinType(String jpName, int price) {\r\n        this.jpName = jpName;\r\n        this.price = price;\r\n    }\r\n\r\n    public String getJpName() {\r\n        return this.jpName;\r\n    }\r\n\r\n    public int getPrice() {\r\n        return this.price;\r\n    }\r\n}\n')),"\n",r.createElement(n.h3,{id:"enum-インスタンスを使ってみる",style:{position:"relative"}},r.createElement(n.a,{href:"#enum-%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B","aria-label":"enum インスタンスを使ってみる permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"enum インスタンスを使ってみる"),"\n",r.createElement(n.p,null,"定義した CoinType を使ってみる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'for (CoinType c : CoinType.values()) {\r\n    System.out.printf("%5s: %3d%n", c.getJpName(), c.getPrice());\r\n}\n')),"\n",r.createElement(n.p,null,"実行結果:"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-output"},"  1円玉:   1\r\n  5円玉:   5\r\n 10円玉:  10\r\n 50円玉:  50\r\n100円玉: 100\r\n500円玉: 500\n")),"\n",r.createElement(n.p,null,"Stream API とラムダ式を使うと上記のコードは次のように書き換えられる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'Arrays.stream(CoinType.values())\r\n    .forEach(e ->\r\n        System.out.printf("%5s: %3d%n", e.getJpName(), e.getPrice())\r\n    );\n')),"\n",r.createElement(n.h2,{id:"金額から-enum-値を返すメソッドを追加する",style:{position:"relative"}},r.createElement(n.a,{href:"#%E9%87%91%E9%A1%8D%E3%81%8B%E3%82%89-enum-%E5%80%A4%E3%82%92%E8%BF%94%E3%81%99%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B","aria-label":"金額から enum 値を返すメソッドを追加する permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"金額から enum 値を返すメソッドを追加する"),"\n",r.createElement(n.p,null,"金額から enum 値（インスタンス）を返す static メソッド priceOf() を追加すると enum は次のようになる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'import java.util.Arrays;\r\n\r\nenum CoinType {\r\n    ONE("1円玉", 1),\r\n    FIVE("5円玉", 5),\r\n    TEN("10円玉", 10),\r\n    FIFTY("50円玉", 50),\r\n    HUNDRED("100円玉", 100),\r\n    FIVE_HUNDRED("500円玉", 500),\r\n    UNKNOWN("存在しない", -1)\r\n    ;\r\n\r\n    private String jpName;\r\n    private int price;\r\n\r\n    CoinType(String jpName, int price) {\r\n        this.jpName = jpName;\r\n        this.price = price;\r\n    }\r\n\r\n    public String getJpName() {\r\n        return this.jpName;\r\n    }\r\n\r\n    public int getPrice() {\r\n        return this.price;\r\n    }\r\n\r\n    public static CoinType priceOf(int price) {\r\n        return Arrays.stream(CoinType.values())\r\n            .filter(e -> price == e.getPrice())\r\n            .findFirst()\r\n            .orElse(CoinType.UNKNOWN);\r\n    }\r\n}\n')),"\n",r.createElement(n.p,null,"この enum を main メソッドから利用してみる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},"System.out.println(CoinType.priceOf(50).getJpName());\r\nSystem.out.println(CoinType.priceOf(60).getJpName());\n")),"\n",r.createElement(n.p,null,"実行結果:"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-output"},"50円玉\r\n存在しない\n")),"\n",r.createElement(n.h3,{id:"凝集度を考えて",style:{position:"relative"}},r.createElement(n.a,{href:"#%E5%87%9D%E9%9B%86%E5%BA%A6%E3%82%92%E8%80%83%E3%81%88%E3%81%A6","aria-label":"凝集度を考えて permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"凝集度を考えて"),"\n",r.createElement(n.p,null,"以下は、enum 的な話を越えた、設計的な余談になる。"),"\n",r.createElement(n.p,null,"クラス設計を考えると、凝集度を高めるために、getter を外部に漏らしたくない。そうすると、enum と enum を使う側のコードは次のようになる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java",meta:'title="Cointype.java"'},"enum CoinType {\r\n\r\n    // ・・・中略\r\n\r\n    public static CoinType priceOf(int price) {\r\n        return Arrays.stream(CoinType.values())\r\n            .filter(e -> price == e.getPrice())\r\n            .findFirst()\r\n            .orElse(CoinType.UNKNOWN);\r\n    }\r\n\r\n    public static String getJpNameFromPriceOf(int price) {\r\n        return priceOf(price).getJpName();\r\n    }\r\n\r\n}\r\n\n")),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},"System.out.println(CoinType.getJpNameFromPriceOf(50));\r\nSystem.out.println(CoinType.getJpNameFromPriceOf(60));\n")),"\n",r.createElement(n.h2,{id:"まとめ",style:{position:"relative"}},r.createElement(n.a,{href:"#%E3%81%BE%E3%81%A8%E3%82%81","aria-label":"まとめ permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"まとめ"),"\n",r.createElement(n.p,null,"Enum の各値には複数の値を対応づけることができる。static メソッドを自作することで、値から逆引きして enum 値（インスタンス）を取得することもできる。"),"\n",r.createElement(n.p,null,"この機能を使えば、アプリ内での設定値の管理が楽になり、処理の見通しも良くなる。"),"\n",r.createElement(n.p,null,"ただし、設定値が数百個単位となってくると、管理が大変になる。"),"\n",r.createElement(n.p,null,"そうした場合は、DB で設定値を管理する方法のほうがベターか、検討する余地がある。"),"\n",r.createElement(n.h2,{id:"練習問題時間-20-分",style:{position:"relative"}},r.createElement(n.a,{href:"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C%E6%99%82%E9%96%93-20-%E5%88%86","aria-label":"練習問題時間 20 分 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"練習問題（時間: 20 分）"),"\n",r.createElement(n.p,null,"次のクラス、インタフェースについて、性別と食性の型を Enum にするよう、リファクタリングをしなさい"),"\n",r.createElement(n.ol,null,"\n",r.createElement(n.li,null,"Barkable.java 鳴く能力をあらわすインタフェース"),"\n",r.createElement(n.li,null,"Animal.java 動物をあらわす抽象クラス"),"\n",r.createElement(n.li,null,"Cat.java ネコクラス"),"\n",r.createElement(n.li,null,"Rabbit.java ウサギクラス"),"\n",r.createElement(n.li,null,"PetShop.java 実行クラス"),"\n"),"\n",r.createElement(n.h3,{id:"1-barkablejava-鳴く能力をあらわすインタフェース",style:{position:"relative"}},r.createElement(n.a,{href:"#1-barkablejava-%E9%B3%B4%E3%81%8F%E8%83%BD%E5%8A%9B%E3%82%92%E3%81%82%E3%82%89%E3%82%8F%E3%81%99%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9","aria-label":"1 barkablejava 鳴く能力をあらわすインタフェース permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. Barkable.java 鳴く能力をあらわすインタフェース"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},"package advanced.enumcon.entity;\r\n\r\npublic interface Barkable {\r\n    void bark();\r\n}\n")),"\n",r.createElement(n.h3,{id:"2-animaljava-動物をあらわす抽象クラス",style:{position:"relative"}},r.createElement(n.a,{href:"#2-animaljava-%E5%8B%95%E7%89%A9%E3%82%92%E3%81%82%E3%82%89%E3%82%8F%E3%81%99%E6%8A%BD%E8%B1%A1%E3%82%AF%E3%83%A9%E3%82%B9","aria-label":"2 animaljava 動物をあらわす抽象クラス permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. Animal.java 動物をあらわす抽象クラス"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'package advanced.enumcon.entity;\r\n\r\npublic abstract class Animal implements Barkable {\r\n\r\n    private String name;\r\n    private boolean isMale;\r\n    private String feedingType;\r\n\r\n    protected Animal(String name, boolean isMale, String feedingType) {\r\n        this.name = name;\r\n        this.isMale = isMale;\r\n        this.feedingType = feedingType;\r\n    }\r\n\r\n    public void eat() {\r\n        showFeedingType();\r\n    }\r\n\r\n    private void showFeedingType() {\r\n        System.out.format(\r\n                "%s は %s ........", this.name, this.feedingType\r\n            );\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n\r\n        return String.format(\r\n                "名前=%s::性別=%s::食性=%s",\r\n                this.name,\r\n                toStringGender(),\r\n                this.feedingType\r\n            );\r\n    }\r\n\r\n    public void changeName(String newName) {\r\n        this.name = newName;\r\n    }\r\n\r\n    private String toStringGender() {\r\n        if (this.isMale) return "オス";\r\n        return "メス";\r\n    }\r\n}\n')),"\n",r.createElement(n.h3,{id:"3-catjava-ネコクラス",style:{position:"relative"}},r.createElement(n.a,{href:"#3-catjava-%E3%83%8D%E3%82%B3%E3%82%AF%E3%83%A9%E3%82%B9","aria-label":"3 catjava ネコクラス permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. Cat.java ネコクラス"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'package advanced.enumcon.entity;\r\n\r\npublic class Cat extends Animal {\r\n\r\n    public Cat(\r\n            String name, boolean isMale) {\r\n\r\n                super(name, isMale, "肉食");\r\n    }\r\n\r\n    @Override\r\n    public void bark() {\r\n        System.out.println("にゃあ にゃあ ........");\r\n    }\r\n\r\n    @Override\r\n    public void eat() {\r\n        super.eat();\r\n        System.out.println("魚を食べた ........");\r\n    }\r\n}\n')),"\n",r.createElement(n.h3,{id:"4-rabbitjava-ウサギクラス",style:{position:"relative"}},r.createElement(n.a,{href:"#4-rabbitjava-%E3%82%A6%E3%82%B5%E3%82%AE%E3%82%AF%E3%83%A9%E3%82%B9","aria-label":"4 rabbitjava ウサギクラス permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4. Rabbit.java ウサギクラス"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'package advanced.enumcon.entity;\r\n\r\npublic class Rabbit extends Animal {\r\n\r\n    public Rabbit(\r\n            String name, boolean isMale) {\r\n\r\n        super(name, isMale,  "草食");\r\n    }\r\n\r\n    @Override\r\n    public void bark() {\r\n        System.out.println("みゅー みゅー ........");\r\n    }\r\n\r\n    @Override\r\n    public void eat() {\r\n        super.eat();\r\n        System.out.println("草を食べた ........");\r\n    }\r\n}\n')),"\n",r.createElement(n.h3,{id:"5-petshopjava-実行クラス",style:{position:"relative"}},r.createElement(n.a,{href:"#5-petshopjava-%E5%AE%9F%E8%A1%8C%E3%82%AF%E3%83%A9%E3%82%B9","aria-label":"5 petshopjava 実行クラス permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"5. PetShop.java 実行クラス"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'package advanced.enumcon;\r\n\r\nimport advanced.abstracts.animal.entity.Animal;\r\nimport advanced.abstracts.animal.entity.Barkable;\r\nimport advanced.abstracts.animal.entity.Cat;\r\nimport advanced.abstracts.animal.entity.Rabbit;\r\n\r\npublic class PetShop {\r\n\r\n    private static final boolean MALE = true;\r\n    private static final boolean FEMALE = false;\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Animal[] pets = {\r\n                new Rabbit(\r\n                        "スキウサギ",\r\n                        FEMALE\r\n                    ),\r\n\r\n                new Cat(\r\n                        "どらねこ",\r\n                        MALE\r\n                    ),\r\n            };\r\n\r\n        for (Animal pet : pets) {\r\n            System.out.println(pet.toString());\r\n            pet.eat();\r\n            pet.bark();\r\n            System.out.println();\r\n        }\r\n\r\n        pets[0].changeName("ツキウサギ");\r\n        System.out.println(pets[0].toString());\r\n        pets[0].eat();\r\n\r\n        Barkable rabbit = pets[0];\r\n        rabbit.bark();\r\n    }\r\n}\n')),"\n",r.createElement(n.h3,{id:"petshopjava-の実行結果",style:{position:"relative"}},r.createElement(n.a,{href:"#petshopjava-%E3%81%AE%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C","aria-label":"petshopjava の実行結果 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"PetShop.java の実行結果"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-console"},"名前=スキウサギ::性別=メス::食性=草食\r\nスキウサギ は HERBI ........草を食べた ........\r\nみゅー みゅー ........\r\n\r\n名前=どらねこ::性別=オス::食性=肉食\r\nどらねこ は CARNI ........魚を食べた ........\r\nにゃあ にゃあ ........\r\n\r\n名前=ツキウサギ::性別=メス::食性=草食\r\nツキウサギ は HERBI ........草を食べた ........\r\nみゅー みゅー ........\n")),"\n",r.createElement(n.h2,{id:"解答例",style:{position:"relative"}},r.createElement(n.a,{href:"#%E8%A7%A3%E7%AD%94%E4%BE%8B","aria-label":"解答例 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"解答例"),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/05.advanced/18.enum-constructor/src/advanced/enumcon"},"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/05.advanced/18.enum-constructor/src/advanced/enumcon")))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.RP)(),e.components);return n?r.createElement(n,e,r.createElement(l,e)):l(e)};function c(e){let{children:n}=e;return n}function m(e){return r.createElement(c,e,r.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-advanced-18-enum-constructor-mdx-cb84e980ba2e738c05c8.js.map