"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4401],{97500:function(e,n,a){a.r(n),a.d(n,{default:function(){return s}});var t=a(63696),r=a(43023);function l(e){const n=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",h3:"h3",p:"p",pre:"pre",code:"code"},(0,r.RP)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.h1,{id:"27-java-の配列",style:{position:"relative"}},t.createElement(n.a,{href:"#27-java-%E3%81%AE%E9%85%8D%E5%88%97","aria-label":"27 java の配列 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"27. Java の配列"),"\n",t.createElement("p",{className:"goal"},"配列のデータを使った処理を実装できるようになること"),"\n",t.createElement(n.h2,{id:"学習",style:{position:"relative"}},t.createElement(n.a,{href:"#%E5%AD%A6%E7%BF%92","aria-label":"学習 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"学習"),"\n",t.createElement(n.h3,{id:"配列を知る",style:{position:"relative"}},t.createElement(n.a,{href:"#%E9%85%8D%E5%88%97%E3%82%92%E7%9F%A5%E3%82%8B","aria-label":"配列を知る permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"配列を知る"),"\n",t.createElement(n.p,null,t.createElement(n.a,{href:"./01-variable"},"01.Java の変数"),"で学習したように値を 1 つ格納するには変数を使います。\r\nしかし複数の値を格納したい場合は、変数だけでは不便な場面も多いです。例えば次のような例を見てみましょう。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String name1 = "山田";\r\nString name2 = "鈴木";\r\nString name3 = "佐藤";\r\n\r\nint age1 = 20;\r\nint age2 = 25;\r\nint age3 = 30;\r\n\r\nSystem.out.printf("%s さんは %d 歳です.\\n", name1, age1);\r\nSystem.out.printf("%s さんは %d 歳です.\\n", name2, age2);\r\nSystem.out.printf("%s さんは %d 歳です.\\n", name3, age3);\n')),"\n",t.createElement(n.h3,{id:"実行結果",style:{position:"relative"}},t.createElement(n.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C","aria-label":"実行結果 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"山田 さんは 20 歳です.\r\n鈴木 さんは 25 歳です.\r\n佐藤 さんは 30 歳です.\n")),"\n",t.createElement(n.p,null,"このプログラムでは 3 人の名前と年齢を変数に入れてから表示をしています。\r\nほぼ同じ名前の変数が複数存在しているので、少し管理が大変ですが無理ではないです。"),"\n",t.createElement(n.p,null,"では 100人、1000 人の情報を保持したい場合も同じ方法を使ったらどうでしょうか。\r\n変数の管理が大変になり、記述しなければいけないプログラムの量も膨大になるのが想像できるはずです。\r\nこのような問題を解決してくれるのが「配列」です。"),"\n",t.createElement(n.p,null,"変数が「箱」に例えられるのに対して、配列は温泉施設などの「ロッカー」に例えられます。\r\n温泉施設のロッカーには荷物を入れる場所が複数存在し、一つ一つに番号が割り振られています。\r\n配列も同じようなイメージを持つと理解がしやすいです。"),"\n",t.createElement(n.h2,{id:"配列の宣言",style:{position:"relative"}},t.createElement(n.a,{href:"#%E9%85%8D%E5%88%97%E3%81%AE%E5%AE%A3%E8%A8%80","aria-label":"配列の宣言 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"配列の宣言"),"\n",t.createElement(n.p,null,"配列の宣言は変数の宣言と似ていますが、データ型の後ろに角括弧を付ける必要があります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},"String[] names;\n")),"\n",t.createElement(n.p,null,"次に、配列に持たせる箱の数を決める必要があります。この数のことを「要素数」と呼びます。"),"\n",t.createElement(n.p,null,"つまり 3 つの値を入れたい場合は次のように要素が 3 つの配列であることを明記しなければいけないです。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},"String[] names;\r\nnames = new String[3];\n")),"\n",t.createElement(n.p,null,"また、この 2 行のプログラムを省略して 1 行で書くことも出来ます。省略した形は次のようになります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},"String[] names = new String[3];\n")),"\n",t.createElement(n.h2,{id:"配列に値を代入",style:{position:"relative"}},t.createElement(n.a,{href:"#%E9%85%8D%E5%88%97%E3%81%AB%E5%80%A4%E3%82%92%E4%BB%A3%E5%85%A5","aria-label":"配列に値を代入 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"配列に値を代入"),"\n",t.createElement(n.p,null,"配列に値を代入する場合はどの要素に入れるかを記述します。要素を識別するために 0 から始まる連番を使います。これの数値のことを「添え字（そえじ）」と呼びます。"),"\n",t.createElement(n.p,null,"今回は 3 つの要素を持つ配列を作りましたので、添え字は 0 ~ 2 です。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String[] names = new String[3];\r\n\r\nnames[0] = "山田";\r\nnames[1] = "鈴木";\r\nnames[2] = "佐藤";\n')),"\n",t.createElement(n.h2,{id:"配列の初期化",style:{position:"relative"}},t.createElement(n.a,{href:"#%E9%85%8D%E5%88%97%E3%81%AE%E5%88%9D%E6%9C%9F%E5%8C%96","aria-label":"配列の初期化 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"配列の初期化"),"\n",t.createElement(n.p,null,"配列は変数と同じように「初期化」をすることもできます。初期化処理は次のように書きます。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String[] names = {"山田", "鈴木", "佐藤"};\n')),"\n",t.createElement(n.h2,{id:"配列の値を出力",style:{position:"relative"}},t.createElement(n.a,{href:"#%E9%85%8D%E5%88%97%E3%81%AE%E5%80%A4%E3%82%92%E5%87%BA%E5%8A%9B","aria-label":"配列の値を出力 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"配列の値を出力"),"\n",t.createElement(n.p,null,"配列の値を出力する場合は、代入するときと同じように添え字を指定する必要があります。\r\n全ての名前を表示する場合は次のように書きます。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String[] names = {"山田", "鈴木", "佐藤"};\r\n\r\nSystem.out.println(names[0]);\r\nSystem.out.println(names[1]);\r\nSystem.out.println(names[2]);\n')),"\n",t.createElement(n.h3,{id:"実行結果-1",style:{position:"relative"}},t.createElement(n.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-1","aria-label":"実行結果 1 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"山田\r\n鈴木\r\n佐藤\n")),"\n",t.createElement(n.h2,{id:"まとめ",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%81%BE%E3%81%A8%E3%82%81","aria-label":"まとめ permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"まとめ"),"\n",t.createElement(n.p,null,"最初に提示したプログラムは配列を使って書き直すと次のようになります。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String[] names = {"山田", "鈴木", "佐藤"};\r\nint[] ages = {20, 25, 30};\r\n\r\nSystem.out.printf("%s さんは %d 歳です.\\n", names[0], ages[0]);\r\nSystem.out.printf("%s さんは %d 歳です.\\n", names[1], ages[1]);\r\nSystem.out.printf("%s さんは %d 歳です.\\n", names[2], ages[2]);\n')),"\n",t.createElement(n.h3,{id:"実行結果-2",style:{position:"relative"}},t.createElement(n.a,{href:"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-2","aria-label":"実行結果 2 permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"実行結果"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"山田 さんは 20 歳です.\r\n鈴木 さんは 25 歳です.\r\n佐藤 さんは 30 歳です.\r\n高橋 さんは 28 歳です.\r\n山本 さんは 34 歳です.\n")),"\n",t.createElement(n.h3,{id:"プラスα",style:{position:"relative"}},t.createElement(n.a,{href:"#%E3%83%97%E3%83%A9%E3%82%B9%CE%B1","aria-label":"プラスα permalink",className:"anchor before"},t.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"プラスα"),"\n",t.createElement(n.p,null,"配列はwhile文やfor文などの繰り返し処理と非常に相性が良いです。\r\nfor文などの使い方は後に出てきますが、ここで知っておいて欲しいのは配列とfor文などの繰り返し処理を組みわせると楽ができる点です。"),"\n",t.createElement(n.p,null,"下の例ではfor文を使うことでデータの数に関わらず、同じプログラムで配列の値を表示することができます。"),"\n",t.createElement(n.pre,null,t.createElement(n.code,{className:"language-java"},'String[] names = {"山田", "鈴木", "佐藤", "高橋", "山本"};\r\nint[] ages = {20, 25, 30, 28, 34};\r\n\r\nfor(int i = 0;i < names.length;i++) {\r\n    System.out.printf("%s さんは %d 歳です.\\n", names[i], ages[i]);\r\n}\n')))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?t.createElement(n,e,t.createElement(l,e)):l(e)};function i(e){let{children:n}=e;return n}function s(e){return t.createElement(i,e,t.createElement(c,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-entry-27-array-mdx-4dec34c089fec64c3a8e.js.map