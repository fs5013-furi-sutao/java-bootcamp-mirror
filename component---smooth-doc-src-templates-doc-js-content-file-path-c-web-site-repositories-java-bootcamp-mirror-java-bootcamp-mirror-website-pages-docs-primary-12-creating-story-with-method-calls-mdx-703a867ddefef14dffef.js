"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7580],{59556:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var r=t(63696),a=t(43023);function l(e){const n=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",p:"p",pre:"pre",code:"code"},(0,a.RP)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.h1,{id:"12-メソッド呼び出しでストーリーを作る",style:{position:"relative"}},r.createElement(n.a,{href:"#12-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%81%A7%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AA%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B","aria-label":"12 メソッド呼び出しでストーリーを作る permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"12. メソッド呼び出しでストーリーを作る"),"\n",r.createElement("p",{className:"goal"},"main メソッド内の手続きを、メソッドの呼び出しが並んだ状態にすると、\r\n処理の流れが把握しやすくなることを知る"),"\n",r.createElement(n.h2,{id:"main-メソッド内をメソッドの呼び出しが並んだ状態にする",style:{position:"relative"}},r.createElement(n.a,{href:"#main-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%86%85%E3%82%92%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%AE%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E3%81%8C%E4%B8%A6%E3%82%93%E3%81%A0%E7%8A%B6%E6%85%8B%E3%81%AB%E3%81%99%E3%82%8B","aria-label":"main メソッド内をメソッドの呼び出しが並んだ状態にする permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"main メソッド内をメソッドの呼び出しが並んだ状態にする"),"\n",r.createElement(n.p,null,"main メソッド内をメソッドの呼び出しが並んだ状態にするとプログラムが読みやすくなります。"),"\n",r.createElement(n.p,null,"例えば次の例を見てみましょう。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'public class App {\r\n    public static void main(String[] args) {\r\n        System.out.println("Game start!");\r\n\r\n        for (int i = 1; i <= 10; i++) {\r\n            System.out.println(i);\r\n        }\r\n\r\n        System.out.pringln("Game end!");\r\n    }\r\n}\n')),"\n",r.createElement(n.p,null,"main メソッド内の処理を外部メソッドに切り出していくと、次のようになります。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java"},'public class App {\r\n    public static void main(String[] args) {\r\n\r\n        App app = new App();\r\n        app.callStart();\r\n        app.count(10);\r\n        app.callEnd();\r\n\r\n    }\r\n\r\n    public void callStart() {\r\n        System.out.println("Game start!");\r\n    }\r\n\r\n    public void callEnd() {\r\n        System.out.pringln("Game end!");\r\n    }\r\n\r\n    public void count(int num) {\r\n        for (int i = 1; i <= num; i++) {\r\n            System.out.println(i);\r\n        }\r\n    }\r\n}\n')),"\n",r.createElement(n.p,null,"このように、1 つの役割ごとに処理をメソッドを切り出し、\r\nmain メソッド内をメソッドの呼び出しが並んだ状態にするとどうでしょう。"),"\n",r.createElement(n.p,null,"処理の流れが把握しやすくなります。\r\nmain メソッド内の手続きで何をやりたいのかの意図が明快ですよね。"),"\n",r.createElement(n.p,null,"main メソッド内に、メソッド呼び出しでストーリーを作ると、\r\n読みやすく分かりやすいプログラムになります。"),"\n",r.createElement(n.h2,{id:"メソッド切り出しの副産物",style:{position:"relative"}},r.createElement(n.a,{href:"#%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%88%87%E3%82%8A%E5%87%BA%E3%81%97%E3%81%AE%E5%89%AF%E7%94%A3%E7%89%A9","aria-label":"メソッド切り出しの副産物 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"メソッド切り出しの副産物"),"\n",r.createElement(n.p,null,"こうして処理を細かく切り出すと、読みやすくなるだけではありません。"),"\n",r.createElement(n.p,null,"例えば上記の例では、Game Start と Game End をそれぞれメソッド化しています。"),"\n",r.createElement(n.p,null,"Game Start の表示だけちょっと変えたいという場合は、\r\ncallStart メソッドだけを変更すれば良いことになります。"),"\n",r.createElement(n.p,null,"細かく部品化したことで、変更箇所がピンポイントで分かりやすくなります。"),"\n",r.createElement(n.h2,{id:"練習問題時間-20-分",style:{position:"relative"}},r.createElement(n.a,{href:"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C%E6%99%82%E9%96%93-20-%E5%88%86","aria-label":"練習問題時間 20 分 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"練習問題（時間: 20 分）"),"\n",r.createElement(n.p,null,"次の BattleField クラスについて、main メソッド内の手続きが分かりやすくなるように、\r\nメソッドの呼び出しが並んだ状態にしなさい"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-java",meta:"title=src/BattleField.java"},'import java.util.Random;\r\n\r\npublic class BattleField {\r\n    private static final int MAX_TURN_NO = 5;\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println("-----");\r\n        System.out.println("処理をスタートします");\r\n        System.out.println("-----");\r\n\r\n        String[] players = { "山本", "浜田", };\r\n\r\n        Random rand = new Random();\r\n        for (int i = 1; i <= MAX_TURN_NO; i++) {\r\n            int randomIndex = rand.nextInt(players.length);\r\n            String attackerName = players[randomIndex];\r\n\r\n            String defenderName\r\n                = players[Math.abs(randomIndex - 1)];\r\n\r\n            System.out.printf("ターン %d: %n", i);\r\n            System.out.printf(\r\n                "%s が %s を攻撃した. %n",\r\n                attackerName, defenderName\r\n            );\r\n            System.out.println();\r\n        }\r\n\r\n        System.out.println("-----");\r\n        System.out.println("処理をスタートします");\r\n        System.out.println("-----");\r\n    }\r\n}\n')),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-txt",meta:"title=BattleFieldクラスの実行結果"},"-----\r\n処理をスタートします\r\n-----\r\n\r\nターン 1:\r\n山本 が 浜田 を攻撃した.\r\n\r\nターン 2:\r\n山本 が 浜田 を攻撃した.\r\n\r\nターン 3:\r\n浜田 が 山本 を攻撃した.\r\n\r\nターン 4:\r\n浜田 が 山本 を攻撃した.\r\n\r\nターン 5:\r\n山本 が 浜田 を攻撃した.\r\n\r\n-----\r\n処理を終わります\r\n-----\r\n\n")),"\n",r.createElement(n.h2,{id:"解答例",style:{position:"relative"}},r.createElement(n.a,{href:"#%E8%A7%A3%E7%AD%94%E4%BE%8B","aria-label":"解答例 permalink",className:"anchor before"},r.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"解答例"),"\n",r.createElement(n.p,null,r.createElement(n.a,{href:"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/12.creating-story-with-method-calls/src/BattleField.java"},"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/12.creating-story-with-method-calls/src/BattleField.java")))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.RP)(),e.components);return n?r.createElement(n,e,r.createElement(l,e)):l(e)};function c(e){let{children:n}=e;return n}function m(e){return r.createElement(c,e,r.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-primary-12-creating-story-with-method-calls-mdx-703a867ddefef14dffef.js.map