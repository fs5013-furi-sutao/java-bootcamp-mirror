{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-entrypg-15-how-to-join-tables-mdx-e4fc18d8cc29d56be8d0.js","mappings":"gLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,IAAK,QACJC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CACnFY,GAAI,eACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,wFACN,aAAc,yBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,iBAAkB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,uBAAwB,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,CACtIQ,GAAI,UACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,mEACN,aAAc,oBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,WAAY,KAAMP,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CACtGU,UAAW,gBACV,4EAA6E,KAAML,EAAAA,cAAoBd,EAAYU,GAAI,CACxHK,GAAI,QACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,yCACN,aAAc,kBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,UAAW,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,oCAAqC,KAAMQ,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CACzLU,UAAW,gBACV,qLAAoM,KAAML,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CAC5RU,UAAW,gBACV,kCAAmC,KAAML,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CAC3HU,UAAW,gBACV,mNAAoN,KAAML,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CAC5SU,UAAW,gBACV,kCAAmC,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,UAAWQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,yBAA0B,KAAMK,EAAAA,cAAoBd,EAAYU,GAAI,CACzRK,GAAI,kBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,mDACN,aAAc,4BACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,oBAAqB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,cAAeK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,yBAA0B,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,6BAA8BQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,cAAe,iBAAkB,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,MAAOQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,kBAAmB,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,QAASK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,cAAe,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,UAAWK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,aAAcK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,OAAQ,yBAA0B,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,2DAA4D,KAAMQ,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,oBAAqBQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,QAASK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,gCAAiC,KAAMK,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CAC1uCU,UAAW,gBACV,qJAAsJ,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,wBAAyBQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,8BAA+B,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,QAASK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,kBAAmB,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,WAAYK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,cAAe,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,MAAOK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,0BAA2B,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,QAASQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,WAAY,QAASK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,cAAe,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,eAAgBK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,qBAAsB,KAAMK,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,gDAAiD,KAAMQ,EAAAA,cAAoBd,EAAYU,GAAI,CACnxCK,GAAI,iBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,kDACN,aAAc,2BACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,mBAAoB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,0EAA2E,KAAMQ,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,wDAAyDQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,cAAe,6BAA8BK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,UAAW,KAAMK,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CACzeU,UAAW,gBACV,oJAAqJ,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYW,IAAK,CAC1OW,IAAK,yBACLC,IAAK,oBACF,KAAMT,EAAAA,cAAoBd,EAAYU,GAAI,CAC7CK,GAAI,kBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,mDACN,aAAc,4BACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,IAAK,CACtCe,wBAAyB,CACvBC,OAAQ,meAEP,oBAAqB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,mCAAoC,KAAMQ,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,yDAA0DQ,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,kBAAmB,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,aAAc,IAAKK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,YAAa,4BAA6BK,EAAAA,cAAoBd,EAAYS,KAAM,KAAM,QAAS,UAAW,KAAMK,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYS,KAAM,CACpkBU,UAAW,gBACV,qJAAsJ,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYW,IAAK,CAC3OW,IAAK,0BACLC,IAAK,qBACF,KAAMT,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,8CACtD,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOY,EAAYX,EAAAA,cAAoBW,EAAW1B,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,ECzGA,SAAS2B,EAAWC,GAAa,IAAZ,SAACC,GAASD,EAC7B,OAAOC,CACT,CAEe,SAASC,EAAiB9B,GACvC,OAAOe,EAAAA,cAAoBY,EAAa3B,EAAOe,EAAAA,cAAoBgB,EAAqB/B,GAC1F,C","sources":["webpack://website/./pages/docs/entrypg/15-how-to-join-tables.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"15-テーブルの結合方法\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#15-%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%81%AE%E7%B5%90%E5%90%88%E6%96%B9%E6%B3%95\",\n    \"aria-label\": \"15 テーブルの結合方法 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"15. テーブルの結合方法\"), \"\\n\", React.createElement(_components.p, null, \"複数のテーブルを結合する方法を説明する\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"基本的な書き方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E6%9B%B8%E3%81%8D%E6%96%B9\",\n    \"aria-label\": \"基本的な書き方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"基本的な書き方\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT カラム名1, カラム名2...\\r\\nFROM テーブル名1\\r\\nINNER JOIN テーブル名2\\r\\nON 結合条件\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"1事前準備\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99\",\n    \"aria-label\": \"1事前準備 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.事前準備\"), \"\\n\", React.createElement(_components.p, null, \"まずは事前準備として次の4つのSQL分を順番に実行してください。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"INSERT INTO offices (officeCode,postalCode,prefecture,city,addressLine1,addressLine2,phone,area)\\r\\nVALUES (2008,\\\"000-8888\\\",\\\"愛知県\\\",\\\"名古屋市\\\",\\\"中区錦1丁目\\\",\\\"5-13\\\",\\\"000-888-8888\\\",\\\"東海\\\");\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SET foreign_key_checks = 0;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"INSERT INTO employees (employeeNumber,firstName,lastName,firstNameKana,lastNameKana,age,email,officeCode,jobPosition)\\r\\nVALUES (1703,'鈴木','太郎','すずき','太郎',30,'sfa.asdf@classicmodels.co.jp','2009','営業担当');\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SET foreign_key_checks = 1;\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行が終わると\", React.createElement(_components.code, null, \"employees\"), \"と\", React.createElement(_components.code, null, \"offices\"), \"テーブルに1レコードずつ追加されています。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"2inner-joinの書き方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2inner-join%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9\",\n    \"aria-label\": \"2inner joinの書き方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.INNER JOINの書き方\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"employees\"), \"テーブルには社員情報、\", React.createElement(_components.code, null, \"offices\"), \"テーブルには営業所情報が登録されています。\"), \"\\n\", React.createElement(_components.p, null, \"どの社員がどの営業所に所属しているのかを確認するには\", React.createElement(_components.code, null, \"officeCode\"), \"をたどれば確認ができます。\"), \"\\n\", React.createElement(_components.p, null, \"例えば\", React.createElement(_components.code, null, \"employeeNumber\"), \"が\", React.createElement(_components.code, null, \"1002\"), \"の従業員の\", React.createElement(_components.code, null, \"officeCode\"), \"は\", React.createElement(_components.code, null, \"2001\"), \"です。\\r\\n\", React.createElement(_components.code, null, \"offices\"), \"テーブルを確認すると\", React.createElement(_components.code, null, \"北海道\"), \"の営業所に所属していることが確認できます。\"), \"\\n\", React.createElement(_components.p, null, \"このようにテーブル同士は特定のカラムの情報を使って、繋げることができます。この情報のことを外部キーといいます。\"), \"\\n\", React.createElement(_components.p, null, \"次のSQL文はこの外部キーを使って\", React.createElement(_components.code, null, \"employees\"), \"テーブルと\", React.createElement(_components.code, null, \"offices\"), \"テーブルを結合し、両テーブルからデータを取得しています。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT employeeNumber,firstName, lastName, prefecture\\r\\nFROM employees\\r\\nINNER JOIN offices\\r\\nON employees.officeCode = offices.officeCode;\\n\")), \"\\n\", React.createElement(_components.p, null, \"ここで注目したいのは「事前準備」で追加した\", React.createElement(_components.code, null, \"employees\"), \"と\", React.createElement(_components.code, null, \"offices\"), \"テーブルのレコードが結果に表示されていないことです。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"employees\"), \"テーブルの\", React.createElement(_components.code, null, \"employeeNumber\"), \"が\", React.createElement(_components.code, null, \"1703\"), \"であるレコードの\", React.createElement(_components.code, null, \"officeCode\"), \"は\", React.createElement(_components.code, null, \"2009\"), \"です。\", React.createElement(_components.code, null, \"offices\"), \"テーブルには該当するレコードは存在しません。\"), \"\\n\", React.createElement(_components.p, null, \"同じように\", React.createElement(_components.code, null, \"offices\"), \"テーブルの\", React.createElement(_components.code, null, \"officeCode\"), \"が\", React.createElement(_components.code, null, \"2008\"), \"であるレコードに対して、\", React.createElement(_components.code, null, \"employees\"), \"に該当するレコードが存在しません。\"), \"\\n\", React.createElement(_components.p, null, \"このようにINNER JOINを使った場合、結合ができなかったレコードは反映されません。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"3left-joinの書き方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3left-join%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9\",\n    \"aria-label\": \"3left joinの書き方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.LEFT JOINの書き方\"), \"\\n\", React.createElement(_components.p, null, \"LEFT JOINを使った場合は、基本的にINNER JOINと同じことができますが、結合できるレコードが存在しない場合の動作が異なります。\"), \"\\n\", React.createElement(_components.p, null, \"結合できるレコードが存在しない場合は、先に記述したテーブルのレコードは結果に反映されます。\\r\\nただし、\", React.createElement(_components.code, null, \"prefecture\"), \"のように後から記述したテーブルにしか存在しない情報は\", React.createElement(_components.code, null, \"NULL\"), \"となります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT employeeNumber,firstName, lastName, prefecture\\r\\nFROM employees\\r\\nLEFT JOIN offices\\r\\nON employees.officeCode = offices.officeCode;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./left-join-result.png\",\n    alt: \"LEFT-JOINの実行結果\"\n  })), \"\\n\", React.createElement(_components.h3, {\n    id: \"4right-joinの書き方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#4right-join%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9\",\n    \"aria-label\": \"4right joinの書き方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4.RIGHT JOINの書き方\"), \"\\n\", React.createElement(_components.p, null, \"RIGHT JOINはLEFT JOINと同じことができます。\"), \"\\n\", React.createElement(_components.p, null, \"結合できるレコードが存在しない場合は、後から記述したテーブルのレコードは結果に反映されます。\\r\\nただし、\", React.createElement(_components.code, null, \"employeeNumber\"), \"、\", React.createElement(_components.code, null, \"firstName\"), \"、\", React.createElement(_components.code, null, \"lastName\"), \"のように先に記述したテーブルにしか存在しない情報は\", React.createElement(_components.code, null, \"NULL\"), \"となります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"SELECT employeeNumber,firstName, lastName, prefecture\\r\\nFROM employees\\r\\nRIGHT JOIN offices\\r\\nON employees.officeCode = offices.officeCode;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./right-join-result.png\",\n    alt: \"RIGHT-JOINの実行結果\"\n  })), \"\\n\", React.createElement(_components.p, null, \"このように3種類の結合方法が存在しているため、用途によって使い分けることができます。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/entrypg/15-how-to-join-tables.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","pre","code","h3","img","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","alt","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}