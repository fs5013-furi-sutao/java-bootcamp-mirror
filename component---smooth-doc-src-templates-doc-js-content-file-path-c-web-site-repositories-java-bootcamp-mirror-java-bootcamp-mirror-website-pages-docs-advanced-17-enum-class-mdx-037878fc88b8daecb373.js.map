{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-advanced-17-enum-class-mdx-037878fc88b8daecb373.js","mappings":"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","sources":["webpack://website/./pages/docs/advanced/17-enum-class.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"17-列挙子-enum-の使い方基本\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#17-%E5%88%97%E6%8C%99%E5%AD%90-enum-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E5%9F%BA%E6%9C%AC\",\n    \"aria-label\": \"17 列挙子 enum の使い方基本 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"17. 列挙子 Enum の使い方（基本）\"), \"\\n\", React.createElement(\"p\", {\n    className: \"goal\"\n  }, \"Enum とは何かが分かり、enum を実装、利用できるようになること\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"学習\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AD%A6%E7%BF%92\",\n    \"aria-label\": \"学習 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"学習\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-クラスを知る\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E7%9F%A5%E3%82%8B\",\n    \"aria-label\": \"enum クラスを知る permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum クラスを知る\"), \"\\n\", React.createElement(_components.p, null, \"Enum クラスとは何かを Web で調べてください。\\r\\n検索キーワードは、「 \", React.createElement(_components.a, {\n    href: \"https://www.google.com/search?q=java+enum\"\n  }, \"java enum\"), \" 」です。\\r\\n3 種類ぐらい説明記事やサンプルコードを読んで、Enum クラスとは何か、Enum クラスの使い方をつかみましょう。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enum-とは\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%A8%E3%81%AF\",\n    \"aria-label\": \"enum とは permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum とは\"), \"\\n\", React.createElement(_components.p, null, \"Enum は enumeration（エナメレーション）の略で、意味的には「列挙」「数え上げること」「一覧表」となる。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"読み方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%AA%AD%E3%81%BF%E6%96%B9\",\n    \"aria-label\": \"読み方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"読み方\"), \"\\n\", React.createElement(_components.p, null, \"なので読み方は、英語的には「エナム」となるが、日本では「イーナム」で通ることが多い。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"列挙子\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%88%97%E6%8C%99%E5%AD%90\",\n    \"aria-label\": \"列挙子 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"列挙子\"), \"\\n\", React.createElement(_components.p, null, \"列挙子と言われても、なかなか一般的に使わない言葉だが、「問題点を列挙する」というと「問題点を 1 つ 1 つ挙げていく」という意味合いになる。\"), \"\\n\", React.createElement(_components.p, null, \"Enum の役割的にも、Enum は「要素を列挙したもの」ということになる。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enumの宣言\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum%E3%81%AE%E5%AE%A3%E8%A8%80\",\n    \"aria-label\": \"enumの宣言 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enumの宣言\"), \"\\n\", React.createElement(_components.p, null, \"Enum は次のような構文で宣言する。\"), \"\\n\", React.createElement(_components.p, null, \"ここでは「果物」を例としたい。ファイル名は FruitType.java となる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=\\\"FruitTypes.java\"\n  }, \"enum FruitType {\\r\\n\\r\\n    APPLE,\\r\\n    ORANGE,\\r\\n    BANANA,\\r\\n    PEACH,\\r\\n    ;\\r\\n\\r\\n}\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"この Enum では「果物（FruitTypes）は、りんご（APPLE）、みかん（ORANGE）、バナナ（BANANA）、モモ（PEACH）のいずれかである」と宣言している。\"), \"\\n\", React.createElement(_components.p, null, \"見て分かる通り、宣言に利用されているキーワードは enum で、class ではない。つまり、Enum はクラスではない。\"), \"\\n\", React.createElement(_components.p, null, \"ように見えるが、Java の内部的には enum は、抽象クラス Enum を継承（extends）したクラスである。\"), \"\\n\", React.createElement(_components.p, null, \"OpenJDK 15: \", React.createElement(_components.code, null, \"Class Enum<E extends Enum<E>>\"), React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://cr.openjdk.java.net/~iris/se/15/latestSpec/api/java.base/java/lang/Enum.html\"\n  }, \"https://cr.openjdk.java.net/~iris/se/15/latestSpec/api/java.base/java/lang/Enum.html\")), \"\\n\", React.createElement(_components.p, null, \"上記で例に出した enum 宣言は、以下のクラス宣言と等価（結果が同じ）となる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"class FruitType {\\r\\n    public static final FruitType APPLE = new FruitType();\\r\\n    public static final FruitType ORANGE = new FruitType();\\r\\n    public static final FruitType BANANA = new FruitType();\\r\\n    public static final FruitType PEACH = new FruitType();\\r\\n\\r\\n    // 外部からインスタンス化できないようにする\\r\\n    private FruitType() {}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-と-class-の違い\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%A8-class-%E3%81%AE%E9%81%95%E3%81%84\",\n    \"aria-label\": \"enum と class の違い permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"enum と class の違い\"), \"\\n\", React.createElement(_components.p, null, \"ただし、enum がクラスと違うのは、暗黙的に便利なメソッドが備わることである。暗黙的に備わっているメソッドについては後述する。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-の値はなぜ大文字か\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%AE%E5%80%A4%E3%81%AF%E3%81%AA%E3%81%9C%E5%A4%A7%E6%96%87%E5%AD%97%E3%81%8B\",\n    \"aria-label\": \"enum の値はなぜ大文字か permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"enum の値はなぜ大文字か？\"), \"\\n\", React.createElement(_components.p, null, \"enum の 値について、表記を大文字にしているのは、Java の一般的な慣習で定数は大文字としているからだ。そのため、小文字で表記してもコンパイルエラーにはならない。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、Java の標準 API や多くのフレームワークでも enum の値は「すべて大文字で単語の区切りはアンダースコア」となっている。\"), \"\\n\", React.createElement(_components.p, null, \"そのため、このルールを守った方が、共同開発する際には他のチームメイトが、コードをメンテしやすくなる。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enum-の値の使い方\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%AE%E5%80%A4%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\",\n    \"aria-label\": \"enum の値の使い方 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"enum の値の使い方\"), \"\\n\", React.createElement(_components.p, null, \"enum の値は、クラスにおける static フィールドとほぼ同じである。\"), \"\\n\", React.createElement(_components.p, null, \"enum の値、すなわちインスタンスへのアクセスは、static フィールドへのアクセスと同じ「enum名. 値の名称」となる。\"), \"\\n\", React.createElement(_components.p, null, \"上記で作成した FruitType の列挙子を使ってみる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"System.out.println(FruitType.BANANA);\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"BANANA\\n\")), \"\\n\", React.createElement(_components.p, null, \"もちろん、FruitType で定義したもの以外を呼び出すことはできない（コンパイルエラー）。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// コンパイルエラー\\r\\nFruitType.GORILLA;\\n\")), \"\\n\", React.createElement(_components.p, null, \"enum で定義した値は、Enum 自身のインスタンスである。String や Integer ではない。つまり、FruitType. BANANA は、「果物の 1 つとしてのバナナ」を表現していることになる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"boolean isBananaFruitType = FruitType.BANANA instanceof FruitType;\\r\\nSystem.out.println(isBananaFruitType);\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"true\\n\")), \"\\n\", React.createElement(_components.p, null, \"enum はクラスと同じように型として扱える。変数として宣言したり、enum のインスタンスを参照したりすることができる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType myFavoriteFruitType = FruitType.PEACH;\\r\\nFruitType myHateFruitType = FruitType.APPLE;\\r\\n\\r\\nshowFruitType(myFavoriteFruitType);\\r\\n\\r\\npublic void showFruitType(FruitType fruitType) {\\r\\n    System.out.println(fruitType);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"つまり、enum はクラスのインスタンスと同じように扱えるものである。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-はインスタンスを生成できない\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%AF%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%82%92%E7%94%9F%E6%88%90%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\",\n    \"aria-label\": \"enum はインスタンスを生成できない permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum はインスタンスを生成できない\"), \"\\n\", React.createElement(_components.p, null, \"Enum が通常のクラスと違う最大のポイントは「インスタンスの生成を enum の外部からできない」ことである。enum として存在するインスタンスは、enum 内であらかじめ定義した値に限られる。\"), \"\\n\", React.createElement(_components.p, null, \"これが Enum の存在意義である。\"), \"\\n\", React.createElement(_components.p, null, \"だからこそ、enum の各インスタンスは、実行されるプログラムの中で「ただ 1 つしかない」ことが保証される「定数」として扱える。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"// コンパイルエラー\\r\\nFruitType fruitType = new FruitType();\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-はアプリの中で設定値として利用される\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%AF%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E4%B8%AD%E3%81%A7%E8%A8%AD%E5%AE%9A%E5%80%A4%E3%81%A8%E3%81%97%E3%81%A6%E5%88%A9%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B\",\n    \"aria-label\": \"enum はアプリの中で設定値として利用される permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum は、アプリの中で設定値として利用される\"), \"\\n\", React.createElement(_components.p, null, \"以上の性質から、Enum はアプリの中で設定値として利用されることが多い。\"), \"\\n\", React.createElement(_components.p, null, \"今回の FruitType の例では、プログラム上では、果物には「りんご」「みかん」「バナナ」「モモ」の 4 種類しか存在しないことが保証される。\"), \"\\n\", React.createElement(_components.p, null, \"アプリで言えば、例えば会員のランクを表す列挙子として MemberRank という enum を作ったとしよう。\"), \"\\n\", React.createElement(_components.p, null, \"SILVER と GOLD という値を定義すれば、会員ランクには 2 種類しか存在しないことが保証される。\"), \"\\n\", React.createElement(_components.p, null, \"アプリを改修したい時でも、「一般会員」を増やすなら、ここに GENERAL を増やすだけで、改修が可能となる。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enum-を使ってみる\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\",\n    \"aria-label\": \"enum を使ってみる permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum を使ってみる\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"enum-と-enum-の比較\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%A8-enum-%E3%81%AE%E6%AF%94%E8%BC%83\",\n    \"aria-label\": \"enum と enum の比較 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum と Enum の比較\"), \"\\n\", React.createElement(_components.p, null, \"以下は、if や switch の条件判定に Enum を使うケース。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType fruitType = FruitType.BANANA;\\r\\n\\r\\nif (fruitType == FruitType.BANANA) {\\r\\n    System.out.println(\\\"バナナ\\\");\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType fruitType = FruitType.BANANA;\\r\\nswitch (fruitType) {\\r\\n    case APPLE:\\r\\n        System.out.println(\\\"りんご\\\");\\r\\n        break;\\r\\n    case ORANGE:\\r\\n        System.out.println(\\\"みかん\\\");\\r\\n        break;\\r\\n    case BANANA:\\r\\n        System.out.println(\\\"バナナ\\\");\\r\\n        break;\\r\\n    case PEACH:\\r\\n        System.out.println(\\\"モモ\\\");\\r\\n        break;\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"この通り、Enum 同士の比較は == で可能となる。equals() メソッドでも比較は可能だが、可読性が悪くなるので、オススメできない。\"), \"\\n\", React.createElement(_components.p, null, \"Java の equals() メソッドの挙動について、しっかり理解している人は、文字列を比較する事例から「== だと、保持する値は同じだけれども、インスタンスが違ったら false になるのでマズいのでは？」と心配するかもしれない。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、enum ではその心配は不要となる。\"), \"\\n\", React.createElement(_components.p, null, \"なぜなら、enum の値、つまりインスタンスは、実行されるプログラム上で必ず 1 つだけになることが保証されているからである。Enum インスタンスの比較は == で OK である。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"enum-が暗黙的に持つメソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#enum-%E3%81%8C%E6%9A%97%E9%BB%99%E7%9A%84%E3%81%AB%E6%8C%81%E3%81%A4%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"enum が暗黙的に持つメソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Enum が暗黙的に持つメソッド\"), \"\\n\", React.createElement(_components.p, null, \"Enum には標準で備わっているメソッドがある。以下で説明するものは、enum であれば、定義、実装をしないでも共通的に使えるものである。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"name-メソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#name-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"name メソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"name() メソッド\"), \"\\n\", React.createElement(_components.p, null, \"name は enum の値の名称を String として返すメソッドである。変数が参照しているのがどの値なのかを確認する時などに利用する。\"), \"\\n\", React.createElement(_components.p, null, \"name() メソッドは、enum 値（インスタンス）から呼び出す、インスタンスメソッドである。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType fruitType = FruitType.BANANA;\\r\\n\\r\\nSystem.out.println(fruitType.name());\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"ordinal-メソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ordinal-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"ordinal メソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ordinal() メソッド\"), \"\\n\", React.createElement(_components.p, null, \"ordinal() メソッドは Enum が宣言された順番（インデックス）を数値で返すメソッドである。インデックスは、ゼロ始まりとなる。\"), \"\\n\", React.createElement(_components.p, null, \"ordinal() メソッドも、enum 値（インスタンス）から呼び出す、インスタンスメソッドである。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"System.out.println(FruitType.APPLE.ordinal());\\r\\nSystem.out.println(FruitType.ORANGE.ordinal());\\r\\nSystem.out.println(FruitType.BANANA.ordinal());\\r\\nSystem.out.println(FruitType.PEACH.ordinal());\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"0\\r\\n1\\r\\n2\\r\\n3\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"valueof-メソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#valueof-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"valueof メソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"valueOf() メソッド\"), \"\\n\", React.createElement(_components.p, null, \"valueOf() メソッドは文字列に対応する enum 値を返すメソッドである。valueOf() メソッドは、Enum の static メソッドなので、enum 値（インスタンス）から呼び出せるメソッドではない。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"String fruitName = \\\"BANANA\\\";\\r\\n\\r\\nFruitType fruitType = FruitType.valueOf(fruitName);\\r\\nSystem.out.println(fruitType);\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"BANANA\\n\")), \"\\n\", React.createElement(_components.p, null, \"enum で定義された値に該当しない文字列を指定すると、実行時例外が発生する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType fruitType = FruitType.valueOf(\\\"DORAGON\\\");\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"java.lang.IllegalArgumentException: No enum constant FruitType.DORAGON\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"values-メソッド\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#values-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\",\n    \"aria-label\": \"values メソッド permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"values() メソッド\"), \"\\n\", React.createElement(_components.p, null, \"values() メソッドは、すべての enum 値の配列を返す static メソッドである。全ての値に対して処理を実行したい場合に利用する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"FruitType[] fruitTypes = FruitType.values();\\r\\n\\r\\nfor (FruitType fruitType : fruitTypes) {\\r\\n    System.out.println(FruitType);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行結果:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-output\"\n  }, \"APPLE\\r\\nORANGE\\r\\nBANANA\\r\\nPEACH\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"まとめ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%81%BE%E3%81%A8%E3%82%81\",\n    \"aria-label\": \"まとめ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"まとめ\"), \"\\n\", React.createElement(_components.p, null, \"Java における Enum とは何か、から基本的な使い方までを見てきた。\"), \"\\n\", React.createElement(_components.p, null, \"Enum はクラスと同じように使うことができるが、インスタンスを生成できない。よって、各 enum 値は実行されるプログラム中にただ 1 つ存在することが保証されたインスタンスであることがわかる。\"), \"\\n\", React.createElement(_components.p, null, \"Enum の利用価値は、定数として、さらにアプリの中では設定値して有効となる。\"), \"\\n\", React.createElement(_components.p, null, \"また、Enum には、暗黙的に name()、ordinal()、valueOf()、values() といったメソッドが用意されている。\"), \"\\n\", React.createElement(_components.p, null, \"そのため、Enum を使い慣れれば、定数や設定値の管理が簡潔に行えるようになる。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/advanced/17-enum-class.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","h3","p","pre","code","br","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","meta","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}