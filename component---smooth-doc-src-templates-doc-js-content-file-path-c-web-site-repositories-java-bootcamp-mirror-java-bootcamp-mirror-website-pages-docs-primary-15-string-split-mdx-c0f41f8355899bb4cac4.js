"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[410],{4680:function(e,n,t){t.r(n),t.d(n,{default:function(){return s}});var l=t(63696),r=t(43023);function a(e){const n=Object.assign({h1:"h1",a:"a",div:"div",h2:"h2",p:"p",ul:"ul",li:"li",pre:"pre",code:"code"},(0,r.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,{id:"15-作成課題--文字列を１行毎に分割",style:{position:"relative"}},l.createElement(n.a,{href:"#15-%E4%BD%9C%E6%88%90%E8%AA%B2%E9%A1%8C--%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%EF%BC%91%E8%A1%8C%E6%AF%8E%E3%81%AB%E5%88%86%E5%89%B2","aria-label":"15 作成課題  文字列を１行毎に分割 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"15. 作成課題 ⭐ 文字列を１行毎に分割"),"\n",l.createElement(n.h2,{id:"概要",style:{position:"relative"}},l.createElement(n.a,{href:"#%E6%A6%82%E8%A6%81","aria-label":"概要 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"概要"),"\n",l.createElement(n.p,null,"ゲームの会話メッセージ表示などで、文字列を１行毎に処理したい場合がある。"),"\n",l.createElement(n.h2,{id:"課題-1-改行コードで分割リストに変換",style:{position:"relative"}},l.createElement(n.a,{href:"#%E8%AA%B2%E9%A1%8C-1-%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7%E5%88%86%E5%89%B2%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AB%E5%A4%89%E6%8F%9B","aria-label":"課題 1 改行コードで分割リストに変換 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"課題 1. 改行コードで分割、リストに変換"),"\n",l.createElement(n.p,null,"次のような文字列分割を行う StringsSplitter クラスを作成しなさい"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"複数行の文字列を、改行コードで分割して、１行毎の文字列のリストに変換する"),"\n",l.createElement(n.li,null,"改行コードが複数連続している場合は、空行もリストに追加する"),"\n",l.createElement(n.li,null,"メソッド名は splitWithLineBreakCode とする"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-java",meta:"title=src/StringsSplitter.java（一部抜粋）"},'List<String> lines = splitWithLineBreakCode(\r\n    "１行目。¥n２行目。¥n３行目。¥n４行目。¥n¥n５行目¥n"\r\n);\r\n\r\nfor (String line : lines) {\r\n    System.out.println(line);\r\n}\n')),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-txt",meta:"title=StringsCompressor.javaの実行結果"},"１行目。\r\n２行目。\r\n３行目。\r\n４行目。\r\n\r\n５行目\n")),"\n",l.createElement(n.h2,{id:"課題-2-さらに句点でも分割",style:{position:"relative"}},l.createElement(n.a,{href:"#%E8%AA%B2%E9%A1%8C-2-%E3%81%95%E3%82%89%E3%81%AB%E5%8F%A5%E7%82%B9%E3%81%A7%E3%82%82%E5%88%86%E5%89%B2","aria-label":"課題 2 さらに句点でも分割 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"課題 2. さらに句点でも分割"),"\n",l.createElement(n.p,null,"課題 1 の処理に次の仕様を加えた StringsMoreSplitter クラスを作成しなさい"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"句点（。）でも分割する"),"\n",l.createElement(n.li,null,"ただし、句点（。）の直後に改行（¥n）がある場合は、句点（。）の直後の改行（¥n）は無視する"),"\n",l.createElement(n.li,null,"メソッド名は splitWithLineBreakCodeAndPeriod とする"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-java",meta:"title=src/StringsMoreSplitter.java（一部抜粋）"},'List<String> lines = splitWithLineBreakCodeAndPeriod(\r\n    "１行目。２行目。¥n３行目。４行目。¥n¥n５行目。"\r\n);\r\n\r\nfor (String line : lines) {\r\n    System.out.println(line);\r\n}\n')),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-txt",meta:"title=StringsMoreSplitter.javaの実行結果"},"１行目。\r\n２行目。\r\n３行目。\r\n４行目。\r\n\r\n５行目。\n")),"\n",l.createElement(n.h2,{id:"課題-3-さらに固定長で分割",style:{position:"relative"}},l.createElement(n.a,{href:"#%E8%AA%B2%E9%A1%8C-3-%E3%81%95%E3%82%89%E3%81%AB%E5%9B%BA%E5%AE%9A%E9%95%B7%E3%81%A7%E5%88%86%E5%89%B2","aria-label":"課題 3 さらに固定長で分割 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"課題 3. さらに固定長で分割"),"\n",l.createElement(n.p,null,"課題 2 の処理に次の仕様を加えた StringsFixedLengthSplitter クラスを作成しなさい"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"文字列を指定した長さで分割する"),"\n",l.createElement(n.li,null,"メソッド名は splitFixedLengthWithLineBreakCodeAndPeriod とする"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-java",meta:"title=src/StringsFixedLengthSplitter.java（一部抜粋）"},'List<String> lines = splitFixedLengthWithLineBreakCodeAndPeriod(\r\n    "このプログラムは、文字列を指定された幅で改行するサンプルプログラムです。",\r\n    6\r\n);\r\n\r\nfor (String line : lines) {\r\n    System.out.println(line);\r\n}\n')),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-txt",meta:"title=StringsFixedLengthSplitter.javaの実行結果"},"このプログラ\r\nムは、文字列\r\nを指定された\r\n幅で改行する\r\nサンプルプロ\r\nグラムです。\n")),"\n",l.createElement(n.h2,{id:"課題-4-さらに禁則処理を追加",style:{position:"relative"}},l.createElement(n.a,{href:"#%E8%AA%B2%E9%A1%8C-4-%E3%81%95%E3%82%89%E3%81%AB%E7%A6%81%E5%89%87%E5%87%A6%E7%90%86%E3%82%92%E8%BF%BD%E5%8A%A0","aria-label":"課題 4 さらに禁則処理を追加 permalink",className:"anchor before"},l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"課題 4. さらに禁則処理を追加"),"\n",l.createElement(n.p,null,"課題 3 の処理に次の禁則処理を追加した StringsJaHyphenationSplitter クラスを作成しなさい"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"行頭禁則文字を句読点（、。）とする"),"\n",l.createElement(n.li,null,"メソッド名は splitFixedLengthJaHyphenationWithLineBreakCodeAndPeriod とする"),"\n"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-java",meta:"title=src/StringsJaHyphenationSplitter.java（一部抜粋）"},'List<String> lines =\r\n    splitFixedLengthJaHyphenationWithLineBreakCodeAndPeriod(\r\n        "このプログラムは、句読点を行頭禁則処理するサンプル。¥n"\r\n        + "最後の行です",\r\n        8\r\n    );\r\n\r\nfor (String line : lines) {\r\n    System.out.println(line);\r\n}\n')),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-txt",meta:"title=StringsJaHyphenationSplitter.javaの実行結果"},"このプログラムは、\r\n句読点を行頭禁則\r\n処理するサンプル。\r\n最後の行です\n")))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)};function c(e){let{children:n}=e;return n}function s(e){return l.createElement(c,e,l.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-primary-15-string-split-mdx-c0f41f8355899bb4cac4.js.map