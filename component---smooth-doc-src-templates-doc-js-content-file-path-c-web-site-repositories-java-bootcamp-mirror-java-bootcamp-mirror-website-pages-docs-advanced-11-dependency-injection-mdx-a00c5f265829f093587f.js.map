{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-advanced-11-dependency-injection-mdx-a00c5f265829f093587f.js","mappings":"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","sources":["webpack://website/./pages/docs/advanced/11-dependency-injection.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"11-依存性の注入di\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5di\",\n    \"aria-label\": \"11 依存性の注入di permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"11. 依存性の注入（DI）\"), \"\\n\", React.createElement(\"p\", {\n    className: \"goal\"\n  }, \"依存性の注入（DI）とは何かが分かり、依存性の注入（DI）のメリットもなんとなく分かり、DI\\r\\nの実装パターンを知る\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"学習\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AD%A6%E7%BF%92\",\n    \"aria-label\": \"学習 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"学習\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"委譲を知る\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A7%94%E8%AD%B2%E3%82%92%E7%9F%A5%E3%82%8B\",\n    \"aria-label\": \"委譲を知る permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"委譲を知る\"), \"\\n\", React.createElement(_components.p, null, \"依存性の注入は、Dependency Injection (DI) と呼ばれる、プログラムの設計、実装パターンのことです。\"), \"\\n\", React.createElement(_components.p, null, \"依存性の注入（DI）とは何かを Web で調べてください。\\r\\n検索キーワードは、「 \", React.createElement(_components.a, {\n    href: \"https://www.google.com/search?q=java+%E5%A7%94%E8%AD%B2\"\n  }, \"java 依存性の注入\"), \" 」\\r\\n「 \", React.createElement(_components.a, {\n    href: \"https://www.google.com/search?q=java+dependency+injection\"\n  }, \"java dependency injection\"), \" 」です。\\r\\n3 種類ぐらい説明記事やサンプルコードを読んで、Java における「依存性の注入（DI）」とは何か探ってみましょう。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性の注入とは\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5%E3%81%A8%E3%81%AF\",\n    \"aria-label\": \"依存性の注入とは permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性の注入とは\"), \"\\n\", React.createElement(_components.p, null, \"Dependency Injection デザインパターンを使用すると、ハードコードされた依存関係をなくし、\\r\\nアプリケーションを疎結合、拡張可能、および保守可能にすることができます。\"), \"\\n\", React.createElement(_components.p, null, \"Java で依存性注入を実装して、依存性の解決をコンパイル時から実行時に移動できます。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"ノーマルな実装\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%83%8E%E3%83%BC%E3%83%9E%E3%83%AB%E3%81%AA%E5%AE%9F%E8%A3%85\",\n    \"aria-label\": \"ノーマルな実装 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ノーマルな実装\"), \"\\n\", React.createElement(_components.p, null, \"・・・と言っても、少し難しい話でまったく分からないと思いますので、まずは「依存性の注入」を使わないノーマルな実装を見てみます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"1-emailservice\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-emailservice\",\n    \"aria-label\": \"1 emailservice permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. EmailService\"), \"\\n\", React.createElement(_components.p, null, \"電子メールを送信するために消費するアプリケーションがあるとしましょう。通常、これは以下のように実装します。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.notdi;\\r\\n\\r\\npublic class EmailService {\\r\\n\\r\\n\\tpublic void sendEmail(String message, String receiver){\\r\\n\\t\\t// メール送信のビジネスロジック\\r\\n        System.out.format(\\r\\n                \\\"[Email] 送信先: %s, メッセージ: %s %n\\\",\\r\\n                receiver, message\\r\\n            );\\r\\n\\t}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-myapplication\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-myapplication\",\n    \"aria-label\": \"2 myapplication permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. MyApplication\"), \"\\n\", React.createElement(_components.p, null, \"MyApplication クラスは、受信者の電子メールアドレスに電子メールメッセージを送信するロジックを保持します。\\r\\nアプリケーションコードは以下のようになります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.notdi;\\r\\n\\r\\npublic class MyApplication {\\r\\n    private EmailService email = new EmailService();\\r\\n\\r\\n\\tpublic void processMessages(String message, String receiver){\\r\\n\\t\\t// message のバリデーションやロジック操作などを行う\\r\\n\\t\\tthis.email.sendEmail(message, receiver);\\r\\n\\t}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"3-mylegacysample\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-mylegacysample\",\n    \"aria-label\": \"3 mylegacysample permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. MyLegacySample\"), \"\\n\", React.createElement(_components.p, null, \"MyApplication クラスを使用して電子メールメッセージを送信するクライアントコードは、次のようになります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.notdi;\\r\\n\\r\\npublic class MyLegacySample {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n\\t\\tMyApplication app = new MyApplication();\\r\\n\\t\\tapp.processMessages(\\r\\n                \\\"こんにちは、山本一郎さん！\\\",\\r\\n                \\\"i_yamamoto@abc.com\\\"\\r\\n            );\\r\\n\\t}\\r\\n}\\r\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"プログラムの実行結果は次の通りになります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[Email] 送信先: i_yamamoto@abc.com, メッセージ: こんにちは、山本一郎さん！\\n\")), \"\\n\", React.createElement(_components.p, null, \"一見すると、上記の実装に問題はないようです。ただし、上記のコードロジックには特定の制限があります。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"ノーマルな実装の問題点\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%83%8E%E3%83%BC%E3%83%9E%E3%83%AB%E3%81%AA%E5%AE%9F%E8%A3%85%E3%81%AE%E5%95%8F%E9%A1%8C%E7%82%B9\",\n    \"aria-label\": \"ノーマルな実装の問題点 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ノーマルな実装の問題点\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.journaldev.com/2394/java-dependency-injection-design-pattern-example-tutorial\"\n  }, \"https://www.journaldev.com/2394/java-dependency-injection-design-pattern-example-tutorial\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"1-変更が困難\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%E5%A4%89%E6%9B%B4%E3%81%8C%E5%9B%B0%E9%9B%A3\",\n    \"aria-label\": \"1 変更が困難 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 変更が困難\"), \"\\n\", React.createElement(_components.p, null, \"MyApplication クラスは、電子メールサービスを初期化してから使用する責任があります。\\r\\nこれにより、依存関係がハードコードされます。将来、他の高度な電子メールサービスに切り替えたい場合は、MyApplication クラスのコードを変更する必要があります。\"), \"\\n\", React.createElement(_components.p, null, \"つまり、アプリケーションの拡張が困難になり、電子メールサービスが複数のクラスで使用されている場合、それはさらに困難になります。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-機能追加が困難\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-%E6%A9%9F%E8%83%BD%E8%BF%BD%E5%8A%A0%E3%81%8C%E5%9B%B0%E9%9B%A3\",\n    \"aria-label\": \"2 機能追加が困難 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. 機能追加が困難\"), \"\\n\", React.createElement(_components.p, null, \"SMS や Facebook メッセージなどの追加のメッセージング機能を提供するようにアプリケーションを拡張する場合は、\\r\\nそのための別のアプリケーションを作成する必要があります。\"), \"\\n\", React.createElement(_components.p, null, \"これには、アプリケーションクラスとクライアントクラスのコード変更も含まれます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"3-テストが困難\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-%E3%83%86%E3%82%B9%E3%83%88%E3%81%8C%E5%9B%B0%E9%9B%A3\",\n    \"aria-label\": \"3 テストが困難 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. テストが困難\"), \"\\n\", React.createElement(_components.p, null, \"アプリケーションは電子メールサービスインスタンスを直接作成しているため、アプリケーションのテストは非常に困難です。\\r\\nテストクラスでこれらのオブジェクトをモックする方法はありません。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"最初の代案\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%9C%80%E5%88%9D%E3%81%AE%E4%BB%A3%E6%A1%88\",\n    \"aria-label\": \"最初の代案 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"最初の代案\"), \"\\n\", React.createElement(_components.p, null, \"MyApplication に引数として電子メールサービスを必要とするコンストラクターを持つことで、\\r\\nクラスから電子メールサービスインスタンスの作成を削除できると主張することができます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"修正-myapplication-にサービスを注入するコンストラクタを追加\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BF%AE%E6%AD%A3-myapplication-%E3%81%AB%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E6%B3%A8%E5%85%A5%E3%81%99%E3%82%8B%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%82%92%E8%BF%BD%E5%8A%A0\",\n    \"aria-label\": \"修正 myapplication にサービスを注入するコンストラクタを追加 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"修正: MyApplication にサービスを注入するコンストラクタを追加\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.notdi;\\r\\n\\r\\npublic class MyApplication {\\r\\n\\r\\n    private EmailService email = null;\\r\\n\\r\\n    public MyApplication(EmailService service) {\\r\\n        this.email = service;\\r\\n    }\\r\\n\\r\\n    public void processMessages(String message, String receiver) {\\r\\n        // message のバリデーションやロジック操作などを行う\\r\\n        this.email.sendEmail(message, receiver);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"ただし、この場合、クライアントアプリケーションまたはテストクラスに電子メールサービスの初期化を依頼していますが、\\r\\nこれは設計上の適切な決定ではありません。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性の注入を取り入れる\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5%E3%82%92%E5%8F%96%E3%82%8A%E5%85%A5%E3%82%8C%E3%82%8B\",\n    \"aria-label\": \"依存性の注入を取り入れる permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性の注入を取り入れる\"), \"\\n\", React.createElement(_components.p, null, \"次に、依存性の注入パターンを適用して、上記の実装に関するすべての問題を解決する方法を見てみましょう。\\r\\nJava での依存性注入には、少なくとも次のものが必要です。\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Service コンポーネント\"), \"\\n\", React.createElement(_components.li, null, \"Consumer クラス\"), \"\\n\", React.createElement(_components.li, null, \"Injector クラス\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"service-コンポーネント\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#service-%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88\",\n    \"aria-label\": \"service コンポーネント permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Service コンポーネント\"), \"\\n\", React.createElement(_components.p, null, \"サービスコンポーネントは、基本クラスまたはインターフェイスを使用して設計する必要があります。\\r\\nサービスのコントラクトを定義するインターフェイスまたは抽象クラスを優先することをお勧めします。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"consumer-クラス\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#consumer-%E3%82%AF%E3%83%A9%E3%82%B9\",\n    \"aria-label\": \"consumer クラス permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Consumer クラス\"), \"\\n\", React.createElement(_components.p, null, \"コンシューマークラスは、サービスインターフェイスの観点から作成する必要があります。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"injector-クラス\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#injector-%E3%82%AF%E3%83%A9%E3%82%B9\",\n    \"aria-label\": \"injector クラス permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Injector クラス\"), \"\\n\", React.createElement(_components.p, null, \"サービスを初期化し、次にコンシューマークラスを初期化するインジェクタークラス。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入1-service-コンポーネント\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A51-service-%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88\",\n    \"aria-label\": \"依存性注入1 service コンポーネント permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入.1: Service コンポーネント\"), \"\\n\", React.createElement(_components.p, null, \"私たちの場合、MessageService サービス実装の契約を宣言することができます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"serviceimessageservicejava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#serviceimessageservicejava\",\n    \"aria-label\": \"serviceimessageservicejava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"service/IMessageService.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.service;\\r\\n\\r\\npublic interface IMessageService {\\r\\n    void sendMessage(String message, String reciever);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"ここで、上記のインターフェースを実装する電子メールがあるとしましょう。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"serviceemailserviceimpljava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#serviceemailserviceimpljava\",\n    \"aria-label\": \"serviceemailserviceimpljava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"service/EmailServiceImpl.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.service;\\r\\n\\r\\npublic class EmailServiceImpl implements IMessageService {\\r\\n\\r\\n    @Override\\r\\n    public void sendMessage(String message, String receiver) {\\r\\n        // メール送信のビジネスロジック\\r\\n        System.out.format(\\r\\n                \\\"[Email] 送信先: %s, メッセージ: %s %n\\\",\\r\\n                receiver, message\\r\\n            );\\r\\n    }\\r\\n }\\n\")), \"\\n\", React.createElement(_components.p, null, \"同じく、SMS サービスも実装します。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"servicesmsserviceimpljava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#servicesmsserviceimpljava\",\n    \"aria-label\": \"servicesmsserviceimpljava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"service/SMSServiceImpl.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.service;\\r\\n\\r\\npublic class SMSServiceImpl implements IMessageService {\\r\\n\\r\\n    @Override\\r\\n    public void sendMessage(String message, String reciever) {\\r\\n        // SMS 送信のビジネスロジック\\r\\n        System.out.format(\\r\\n                \\\"[SMS] 送信先: %s, メッセージ: %s %n\\\",\\r\\n                reciever, message\\r\\n            );\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"依存性注入サービスの準備が整い、Consumer クラスを記述できるようになりました。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入2-service-consumer\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A52-service-consumer\",\n    \"aria-label\": \"依存性注入2 service consumer permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入.2: Service Consumer\"), \"\\n\", React.createElement(_components.p, null, \"Consumer クラスの基本インターフェイスは必須にはなりませんが、\\r\\nConsumer クラスの契約（取り決め）を宣言するインタフェースを用意します。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"consumericonsumerjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#consumericonsumerjava\",\n    \"aria-label\": \"consumericonsumerjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"consumer/IConsumer.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.consumer;\\r\\n\\r\\npublic interface IConsumer {\\r\\n    void processMessages(String message, String receiver);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Consumer クラスの実装は次のようになります。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"consumermydiapplicationjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#consumermydiapplicationjava\",\n    \"aria-label\": \"consumermydiapplicationjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"consumer/MyDiApplication.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.consumer;\\r\\n\\r\\nimport advanced.dependency.injection.di.service.IMessageService;\\r\\n\\r\\npublic class MyDiApplication implements IConsumer {\\r\\n\\r\\n    private IMessageService service;\\r\\n\\r\\n    public MyDiApplication(IMessageService service) {\\r\\n        this.service = service;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public void processMessages(String message, String receiver) {\\r\\n\\r\\n        // message のバリデーション、操作ロジックなどを行う\\r\\n        this.service.sendMessage(message, receiver);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"アプリケーションクラスがサービスを使用していることに注意してください。\\r\\nより良い「関心の分離」につながるサービスは初期化されません。\"), \"\\n\", React.createElement(_components.p, null, \"また、サービスインタフェースを使用すると、MessageService をモックしてアプリケーションを簡単にテストし、\\r\\nコンパイル時ではなく実行時にサービスをバインドできます。\"), \"\\n\", React.createElement(_components.p, null, \"これで、サービスと Consumer クラスを初期化する依存性注入クラスを作成する準備が整いました。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入3-injector-クラス\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A53-injector-%E3%82%AF%E3%83%A9%E3%82%B9\",\n    \"aria-label\": \"依存性注入3 injector クラス permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入.3: Injector クラス\"), \"\\n\", React.createElement(_components.p, null, \"Consumer クラスを返すメソッド宣言を備えた MessageServiceInjector インタフェースを用意しましょう。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"injectorimessageserviceinjectorjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#injectorimessageserviceinjectorjava\",\n    \"aria-label\": \"injectorimessageserviceinjectorjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"injector/IMessageServiceInjector.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.injector;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\n\\r\\npublic interface IMessageServiceInjector {\\r\\n    public IConsumer getConsumer();\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"これで、すべてのサービスについて、以下のような Injector クラスを作成する必要があります。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"injectoremailserviceinjectorjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#injectoremailserviceinjectorjava\",\n    \"aria-label\": \"injectoremailserviceinjectorjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"injector/EmailServiceInjector.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.injector;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\nimport advanced.dependency.injection.di.consumer.MyDiApplication;\\r\\nimport advanced.dependency.injection.di.service.EmailServiceImpl;\\r\\n\\r\\npublic class EmailServiceInjector implements IMessageServiceInjector {\\r\\n\\r\\n    @Override\\r\\n    public IConsumer getConsumer() {\\r\\n        return new MyDiApplication(new EmailServiceImpl());\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"injectorsmsserviceinjectorjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#injectorsmsserviceinjectorjava\",\n    \"aria-label\": \"injectorsmsserviceinjectorjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"injector/SMSServiceInjector.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.injector;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\nimport advanced.dependency.injection.di.consumer.MyDiApplication;\\r\\nimport advanced.dependency.injection.di.service.SMSServiceImpl;\\r\\n\\r\\npublic class SMSServiceInjector implements IMessageServiceInjector {\\r\\n    @Override\\r\\n    public IConsumer getConsumer() {\\r\\n        return new MyDiApplication(new SMSServiceImpl());\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"次に、クライアントアプリケーションが単純なプログラムでアプリケーションをどのように使用するかを見てみましょう。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"mymessageditestjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#mymessageditestjava\",\n    \"aria-label\": \"mymessageditestjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"MyMessageDiTest.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\nimport advanced.dependency.injection.di.injector.EmailServiceInjector;\\r\\nimport advanced.dependency.injection.di.injector.IMessageServiceInjector;\\r\\nimport advanced.dependency.injection.di.injector.SMSServiceInjector;\\r\\n\\r\\npublic class MyMessageDiTest {\\r\\n    public static void main(String[] args) {\\r\\n        String message  = \\\"こんにちは、山本一郎さん！\\\";\\r\\n        String email = \\\"i_yamamoto@abc.com\\\";\\r\\n        String phone = \\\"\\\";\\r\\n\\r\\n        IMessageServiceInjector injector = null;\\r\\n        IConsumer app = null;\\r\\n\\r\\n        injector = new EmailServiceInjector();\\r\\n        app = injector.getConsumer();\\r\\n        app.processMessages(message, email);\\r\\n\\r\\n        injector = new SMSServiceInjector();\\r\\n        app = injector.getConsumer();\\r\\n        app.processMessages(message, phone);\\r\\n\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"この通り、Application クラスは Service の使用のみを担当しています。\\r\\nService クラスは Injector で作成されます。\"), \"\\n\", React.createElement(_components.p, null, \"また、Facebook メッセージングを許可するようにアプリケーションをさらに拡張する必要がある場合は、\\r\\nService クラスと Injector クラスのみを作成するだけで OK になりました。\"), \"\\n\", React.createElement(_components.p, null, \"そのため、依存性注入の実装により、ハードコードされた依存性の問題が解決され、\\r\\nアプリケーションを柔軟で簡単に拡張できるようになりました。\"), \"\\n\", React.createElement(_components.p, null, \"次に、Injector クラスと Service クラスをモックすることで、\\r\\nアプリケーションクラスを簡単にテストできるようになることを見てみましょう。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入4-junit-テストケース\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A54-junit-%E3%83%86%E3%82%B9%E3%83%88%E3%82%B1%E3%83%BC%E3%82%B9\",\n    \"aria-label\": \"依存性注入4 junit テストケース permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入.4: JUnit テストケース\"), \"\\n\", React.createElement(_components.p, null, \"今回は、匿名クラスを使用して Injector クラスと Service クラスをモックしています。\\r\\nアプリケーションメソッドを簡単にテストできることが分かります。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"testmydiapplicationjunittestjava\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#testmydiapplicationjunittestjava\",\n    \"aria-label\": \"testmydiapplicationjunittestjava permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"test/MyDiApplicationJUnitTest.java\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.test;\\r\\n\\r\\nimport org.junit.After;\\r\\nimport org.junit.Before;\\r\\nimport org.junit.Test;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\nimport advanced.dependency.injection.di.consumer.MyDiApplication;\\r\\nimport advanced.dependency.injection.di.injector.IMessageServiceInjector;\\r\\nimport advanced.dependency.injection.di.service.IMessageService;\\r\\n\\r\\npublic class MyDiApplicationJUnitTest {\\r\\n\\r\\n    private IMessageServiceInjector injector;\\r\\n\\r\\n    @Before\\r\\n    public void setUp() {\\r\\n        // 匿名クラスで Injector をモックする\\r\\n\\t\\tinjector = new IMessageServiceInjector() {\\r\\n\\r\\n\\t\\t\\t@Override\\r\\n\\t\\t\\tpublic IConsumer getConsumer() {\\r\\n\\t\\t\\t\\t// メッセージ Service をモックする\\r\\n\\t\\t\\t\\treturn new MyDiApplication(new IMessageService() {\\r\\n\\r\\n\\t\\t\\t\\t\\t@Override\\r\\n\\t\\t\\t\\t\\tpublic void sendMessage(String message, String receiver) {\\r\\n\\t\\t\\t\\t\\t\\tSystem.out.format(\\r\\n\\t\\t\\t\\t\\t\\t\\t    \\\"[モック] 送信先: %s, メッセージ: %s %n\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treceiver, message\\r\\n\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n\\tpublic void test() {\\r\\n\\t\\tIConsumer consumer = injector.getConsumer();\\r\\n\\t\\tconsumer.processMessages(\\r\\n\\t\\t\\t\\t\\\"こんにちは、山本一郎さん！\\\",\\r\\n\\t\\t\\t\\t\\\"i_yamamoto@abc.com\\\"\\r\\n\\t\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\t@After\\r\\n\\tpublic void tear(){\\r\\n\\t\\tinjector = null;\\r\\n\\t}\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"コンストラクタを使用してアプリケーションクラスに依存関係を注入しました。\"), \"\\n\", React.createElement(_components.p, null, \"別の方法として考えられるのは、setter メソッドを使用してアプリケーションクラスに依存関係を注入する方法です。\\r\\nsetter メソッドによる依存性注入の場合、アプリケーションクラスは次のように実装されます。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"consumermydiapplicationjava-の依存性注入方法を-setter-にする\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#consumermydiapplicationjava-%E3%81%AE%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A5%E6%96%B9%E6%B3%95%E3%82%92-setter-%E3%81%AB%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"consumermydiapplicationjava の依存性注入方法を setter にする permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"consumer/MyDiApplication.java の依存性注入方法を setter にする\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.consumer;\\r\\n\\r\\nimport advanced.dependency.injection.di.service.IMessageService;\\r\\n\\r\\npublic class MyDiApplication implements IConsumer {\\r\\n\\r\\n    private IMessageService service;\\r\\n\\r\\n    // setter による依存性の注入\\r\\n\\tpublic void setService(IMessageService service) {\\r\\n\\t\\tthis.service = service;\\r\\n\\t}\\r\\n\\r\\n    @Override\\r\\n    public void processMessages(String message, String receiver) {\\r\\n\\r\\n        // message のバリデーション、操作ロジックなどを行う\\r\\n        this.service.sendMessage(message, receiver);\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Injector のほうも、setter で依存性を注入するようにします。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"injectoremailserviceinjectorjava-で-setter-で注入するように修正\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#injectoremailserviceinjectorjava-%E3%81%A7-setter-%E3%81%A7%E6%B3%A8%E5%85%A5%E3%81%99%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E4%BF%AE%E6%AD%A3\",\n    \"aria-label\": \"injectoremailserviceinjectorjava で setter で注入するように修正 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"injector/EmailServiceInjector.java で setter で注入するように修正\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"package advanced.dependency.injection.di.injector;\\r\\n\\r\\nimport advanced.dependency.injection.di.consumer.IConsumer;\\r\\nimport advanced.dependency.injection.di.consumer.MyDiApplication;\\r\\nimport advanced.dependency.injection.di.service.EmailServiceImpl;\\r\\n\\r\\npublic class EmailServiceInjector implements IMessageServiceInjector {\\r\\n\\r\\n    @Override\\r\\n    public IConsumer getConsumer() {\\r\\n        MyDiApplication app = new MyDiApplication();\\r\\n        app.setService(new EmailServiceImpl());\\r\\n        return app;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"コンストラクタで注入するかsetter-で注入するか\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E6%B3%A8%E5%85%A5%E3%81%99%E3%82%8B%E3%81%8Bsetter-%E3%81%A7%E6%B3%A8%E5%85%A5%E3%81%99%E3%82%8B%E3%81%8B\",\n    \"aria-label\": \"コンストラクタで注入するかsetter で注入するか permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"コンストラクタで注入するか？setter で注入するか？\"), \"\\n\", React.createElement(_components.p, null, \"コンストラクターベースの依存性注入を使用するか、セッターベースを使用するかは設計上の決定であり、\\r\\n要件によって異なります。\"), \"\\n\", React.createElement(_components.p, null, \"たとえば、アプリケーションが Service クラスなしではまったく機能しない場合は、\\r\\nコンストラクターベースの DI を使用するか、setter メソッドベースの DI を使用して、本当に必要な場合にのみ使用します。\"), \"\\n\", React.createElement(_components.p, null, \"Java での依存性注入は、オブジェクトのバインドをコンパイル時から実行時に移動することにより、\\r\\nアプリケーションで制御の反転（IoC）を実現する方法です。\"), \"\\n\", React.createElement(_components.p, null, \"IoC は、ファクトリパターン、テンプレートメソッドデザインパターン、ストラテジーパターン、サービスロケーターパターンによっても実現できます。\"), \"\\n\", React.createElement(_components.p, null, \"制御の反転（IoC）については、\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-collaborators\"\n  }, \" Spring Dependency Injection \"), \"、\\r\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/google/guice\"\n  }, \" Google Guice \"), \"、\\r\\nおよび \", React.createElement(_components.a, {\n    href: \"https://docs.oracle.com/cd/E84527_01/wls/WLPRG/cdi.htm\"\n  }, \" Java EE CDI フレームワーク \"), \" は、\\r\\n\", React.createElement(_components.a, {\n    href: \"https://docs.oracle.com/javase/jp/8/docs/technotes/guides/reflection/enhancements.html\"\n  }, \" Java Reflection API \"), \" と\\r\\n\", React.createElement(_components.a, {\n    href: \"https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%8E%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3#Java%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%82%A2%E3%83%8E%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"\n  }, \" Java アノテーション \"), \" を使用して、\\r\\n依存性注入のプロセスを容易にします。\"), \"\\n\", React.createElement(_components.p, null, \"必要なのは、フィールド、コンストラクタ、または setter メソッドに注釈を付け、構成 xml ファイルまたはクラスでそれらを構成することだけです。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入のメリット\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A5%E3%81%AE%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88\",\n    \"aria-label\": \"依存性注入のメリット permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入のメリット\"), \"\\n\", React.createElement(_components.p, null, \"Java で依存性注入を使用するメリットは次のとおりです。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"関心事の分離\"), \"\\n\", React.createElement(_components.li, null, \"依存関係を初期化するためのすべての作業が Injector コンポーネントによって処理されるため、アプリケーションクラスのボイラープレートコードを削減できる\"), \"\\n\", React.createElement(_components.li, null, \"構成可能なコンポーネントにより、アプリケーションを簡単に拡張できます\"), \"\\n\", React.createElement(_components.li, null, \"モックオブジェクトで簡単にユニットテストを実行できる\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"依存性注入のデメリット\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A5%E3%81%AE%E3%83%87%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88\",\n    \"aria-label\": \"依存性注入のデメリット permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"依存性注入のデメリット\"), \"\\n\", React.createElement(_components.p, null, \"依存性注入には、いくつか欠点もあります。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"使いすぎると、変更の影響が実行時にわかっているため、メンテナンスの問題が発生する可能性がある\"), \"\\n\", React.createElement(_components.li, null, \"Java での依存性注入は、コンパイル時にキャッチされたであろうランタイムエラーにつながる可能性のある Service クラスの依存性を隠す\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"まとめ\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E3%81%BE%E3%81%A8%E3%82%81\",\n    \"aria-label\": \"まとめ permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"まとめ\"), \"\\n\", React.createElement(_components.p, null, \"Service を管理する場合、Dependency Injection のメリット/デメリットを知り、実装方法を知ることで柔軟で堅牢なアプリケーションを設計することができます。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/advanced/11-dependency-injection.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","h3","p","pre","code","ol","li","ul","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}