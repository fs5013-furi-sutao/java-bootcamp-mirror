{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-primary-13-methodize-conditional-expressions-in-if-statements-mdx-f2cc0f45fed8811d980f.js","mappings":"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","sources":["webpack://website/./pages/docs/primary/13-methodize-conditional-expressions-in-if-statements.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"13-if-文や-while-文の条件式をメソッドにする\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#13-if-%E6%96%87%E3%82%84-while-%E6%96%87%E3%81%AE%E6%9D%A1%E4%BB%B6%E5%BC%8F%E3%82%92%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%AB%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"13 if 文や while 文の条件式をメソッドにする permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"13. if 文や while 文の条件式をメソッドにする\"), \"\\n\", React.createElement(\"p\", {\n    className: \"goal\"\n  }, \"if 文や while 文の条件式を is○○ のようなメソッド呼び出しにすると、\\r\\n何を判定しているか分かりやすいコードになることを知る\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"条件式をメソッド化する\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%9D%A1%E4%BB%B6%E5%BC%8F%E3%82%92%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E5%8C%96%E3%81%99%E3%82%8B\",\n    \"aria-label\": \"条件式をメソッド化する permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"条件式をメソッド化する\"), \"\\n\", React.createElement(_components.p, null, \"次の例を見てください。\"), \"\\n\", React.createElement(_components.p, null, \"showCheckValueResult メソッド内の if 文では値が指定範囲内にあるかチェックしています。\\r\\nしかし、条件式を見ても、直感的に範囲チェックしているのが読み取りにくいです。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=リファクタリング前\"\n  }, \"public class Validator {\\r\\n\\r\\n    final int MIN = 10;\\r\\n    final int MAX = 20;\\r\\n\\r\\n    public void showCheckValueResult(int num) {\\r\\n\\r\\n        if (return this.MIN <= num && num <= this.MAX) {\\r\\n            System.out.println(\\\"範囲内です.\\\");\\r\\n            returnl;\\r\\n        }\\r\\n        System.out.println(\\\"範囲外です.\\\");\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"そこで、条件式を外部メソッド isInRange() に切り出してあげると、範囲チェックしていることが直感的に伝わりやすくなります。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=リファクタリング後：if文の条件式をメソッド化\"\n  }, \"public class Validator {\\r\\n\\r\\n    final int MIN = 10;\\r\\n    final int MAX = 20;\\r\\n\\r\\n    public void showCheckValueResult(int num) {\\r\\n\\r\\n        if (isInRange(num)) {\\r\\n            System.out.println(\\\"範囲内です.\\\");\\r\\n            returnl;\\r\\n        }\\r\\n        System.out.println(\\\"範囲外です.\\\");\\r\\n    }\\r\\n\\r\\n    private boolean isInRange(int num) {\\r\\n        return this.MIN <= num && num <= this.MAX;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"このように、if 文や while 文の条件式を \", React.createElement(_components.code, null, \"is○○\"), \" のようなメソッド呼び出しにすると、\\r\\n何を判定しているか分かりやすいコードになります。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"練習問題-01時間-20-分\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C-01%E6%99%82%E9%96%93-20-%E5%88%86\",\n    \"aria-label\": \"練習問題 01時間 20 分 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"練習問題 01（時間: 20 分）\"), \"\\n\", React.createElement(_components.p, null, \"次のクラス SlimeAttacker について、main メソッド内の処理で使われている条件式をメソッド化しなさい\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/SlimeAttacker.java\"\n  }, \"import java.util.Random;\\r\\n\\r\\npublic class SlimeAttacker {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        Slime slime = new Slime(\\\"メタルスライム\\\", 12);\\r\\n        int cntTurn = 0;\\r\\n\\r\\n        while (slime.hp > 0) {\\r\\n\\r\\n            cntTurn++;\\r\\n            System.out.printf(\\\"%d ターン: %n\\\", cntTurn);\\r\\n\\r\\n            slime.recieveBlows();\\r\\n\\r\\n            if (slime.hp <= 0) {\\r\\n                System.out.printf(\\r\\n                    \\\"%s は死にました.  %n\\\", slime.name\\r\\n                );\\r\\n            }\\r\\n            System.out.println();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Slime {\\r\\n    Random rand = new Random();\\r\\n    public String name;\\r\\n    public int hp;\\r\\n\\r\\n    public Slime(String name, int hp) {\\r\\n        this.name = name;\\r\\n        this.hp = hp;\\r\\n    }\\r\\n\\r\\n    public void recieveBlows() {\\r\\n        System.out.printf(\\\"%s は殴られた. %n\\\", this.name);\\r\\n\\r\\n        int damage = this.rand.nextInt(10);\\r\\n        this.hp = Math.max(0, this.hp - damage);\\r\\n\\r\\n        System.out.printf(\\r\\n            \\\" => %s は %d のダメージを受けた. %n\\\", this.name, damage\\r\\n        );\\r\\n        System.out.printf(\\\" => HP: %d %n\\\", this.hp);\\r\\n    }\\r\\n}\\r\\n\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=SlimeAttackerクラスの実行結果\"\n  }, \"1 ターン:\\r\\nメタルスライム は殴られた.\\r\\n => メタルスラム は 0 のダメージを受けた.\\r\\n => HP: 12\\r\\n\\r\\n2 ターン:\\r\\nメタルスライム は殴られた.\\r\\n => メタルスラム は 4 のダメージを受けた.\\r\\n => HP: 8\\r\\n\\r\\n3 ターン:\\r\\nメタルスライム は殴られた.\\r\\n => メタルスラム は 2 のダメージを受けた.\\r\\n => HP: 6\\r\\n\\r\\n4 ターン:\\r\\nメタルスライム は殴られた.\\r\\n => メタルスラム は 9 のダメージを受けた.\\r\\n => HP: 0\\r\\nメタルスライム は死んだ.\\r\\n\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"解答例\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%A7%A3%E7%AD%94%E4%BE%8B\",\n    \"aria-label\": \"解答例 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"解答例\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/13.methodize-conditional-expressions-in-if-statements/src/SlimeAttacker.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/13.methodize-conditional-expressions-in-if-statements/src/SlimeAttacker.java\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"練習問題-02時間-20-分\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%B7%B4%E7%BF%92%E5%95%8F%E9%A1%8C-02%E6%99%82%E9%96%93-20-%E5%88%86\",\n    \"aria-label\": \"練習問題 02時間 20 分 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"練習問題 02（時間: 20 分）\"), \"\\n\", React.createElement(_components.p, null, \"次のクラス TemperatureManager について、main メソッド内の処理で使われている条件式をメソッド化しなさい\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/TemperatureManager.java\"\n  }, \"import java.util.Random;\\r\\n\\r\\npublic class TemperatureManager {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        final int DIFF_SETTING = 6;\\r\\n        final int MIN_TEMPERATURE = 2;\\r\\n        final int MAX_TEMPERATURE = 11;\\r\\n        int nowTemperature = 7;\\r\\n\\r\\n        Temperature aichiTemp =\\r\\n            new Temperature(\\r\\n                MIN_TEMPERATURE, MAX_TEMPERATURE, nowTemperature\\r\\n            );\\r\\n\\r\\n        aichiTemp.showCurrentStatus();\\r\\n\\r\\n        while (MIN_TEMPERATURE <= aichiTemp.now\\r\\n                && aichiTemp.now <= MAX_TEMPERATURE) {\\r\\n\\r\\n            aichiTemp.addChange(DIFF_SETTING);\\r\\n            aichiTemp.showNowAndCurrentChange();\\r\\n\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Temperature {\\r\\n    private static Random rand = new Random();\\r\\n    public final int MIN;\\r\\n    public final int MAX;\\r\\n    public int now;\\r\\n    public int currentChange;\\r\\n\\r\\n    public Temperature(int min, int max, int now) {\\r\\n        this.MIN = min;\\r\\n        this.MAX = max;\\r\\n        this.now = now;\\r\\n    }\\r\\n\\r\\n    public void showNowAndCurrentChange() {\\r\\n        System.out.printf(\\r\\n            \\\"現在の気温: %d (差: %d) %n\\\",\\r\\n            this.now, this.currentChange\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public void addChange(int diffSetting) {\\r\\n        this.currentChange = this.getChange(diffSetting);\\r\\n        this.now += this.currentChange;\\r\\n    }\\r\\n\\r\\n    public void showCurrentStatus() {\\r\\n        System.out.printf(\\r\\n            \\\"設定温度=( 最低: %d, 最高: %d ) %n\\\",\\r\\n            this.MIN, this.MAX\\r\\n        );\\r\\n        System.out.printf(\\\"現在の気温: %d %n\\\", this.now);\\r\\n        System.out.println(\\\"-----\\\");\\r\\n    }\\r\\n\\r\\n    public int getChange(int diffSetting) {\\r\\n        int sign = rand.nextBoolean() ? 1 : -1;  // プラス・マイナス符号\\r\\n        return rand.nextInt(diffSetting) * sign;\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=TemperatureManagerクラスの実行結果\"\n  }, \"設定温度=( 最低: 2, 最高: 11 )\\r\\n現在の気温: 7\\r\\n-----\\r\\n現在の気温: 11 (差: 4)\\r\\n現在の気温: 10 (差: -1)\\r\\n現在の気温: 6 (差: -4)\\r\\n現在の気温: 9 (差: 3)\\r\\n現在の気温: 13 (差: 4)\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"解答例-1\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%A7%A3%E7%AD%94%E4%BE%8B-1\",\n    \"aria-label\": \"解答例 1 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"解答例\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/13.methodize-conditional-expressions-in-if-statements/src/TemperatureManager.java\"\n  }, \"https://github.com/fs5013-furi-sutao/java-bootcamp-answers/blob/main/03.primary/13.methodize-conditional-expressions-in-if-statements/src/TemperatureManager.java\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/primary/13-methodize-conditional-expressions-in-if-statements.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","p","pre","code","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","meta","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}