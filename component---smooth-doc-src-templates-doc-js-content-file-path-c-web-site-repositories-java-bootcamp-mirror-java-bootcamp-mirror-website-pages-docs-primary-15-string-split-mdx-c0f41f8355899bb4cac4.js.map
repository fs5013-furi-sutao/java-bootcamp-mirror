{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-web-site-repositories-java-bootcamp-mirror-java-bootcamp-mirror-website-pages-docs-primary-15-string-split-mdx-c0f41f8355899bb4cac4.js","mappings":"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","sources":["webpack://website/./pages/docs/primary/15-string-split.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"15-作成課題--文字列を１行毎に分割\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#15-%E4%BD%9C%E6%88%90%E8%AA%B2%E9%A1%8C--%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%EF%BC%91%E8%A1%8C%E6%AF%8E%E3%81%AB%E5%88%86%E5%89%B2\",\n    \"aria-label\": \"15 作成課題  文字列を１行毎に分割 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"15. 作成課題 ⭐ 文字列を１行毎に分割\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"概要\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%A6%82%E8%A6%81\",\n    \"aria-label\": \"概要 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"概要\"), \"\\n\", React.createElement(_components.p, null, \"ゲームの会話メッセージ表示などで、文字列を１行毎に処理したい場合がある。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"課題-1-改行コードで分割リストに変換\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%AA%B2%E9%A1%8C-1-%E6%94%B9%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7%E5%88%86%E5%89%B2%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AB%E5%A4%89%E6%8F%9B\",\n    \"aria-label\": \"課題 1 改行コードで分割リストに変換 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"課題 1. 改行コードで分割、リストに変換\"), \"\\n\", React.createElement(_components.p, null, \"次のような文字列分割を行う StringsSplitter クラスを作成しなさい\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"複数行の文字列を、改行コードで分割して、１行毎の文字列のリストに変換する\"), \"\\n\", React.createElement(_components.li, null, \"改行コードが複数連続している場合は、空行もリストに追加する\"), \"\\n\", React.createElement(_components.li, null, \"メソッド名は splitWithLineBreakCode とする\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/StringsSplitter.java（一部抜粋）\"\n  }, \"List<String> lines = splitWithLineBreakCode(\\r\\n    \\\"１行目。¥n２行目。¥n３行目。¥n４行目。¥n¥n５行目¥n\\\"\\r\\n);\\r\\n\\r\\nfor (String line : lines) {\\r\\n    System.out.println(line);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=StringsCompressor.javaの実行結果\"\n  }, \"１行目。\\r\\n２行目。\\r\\n３行目。\\r\\n４行目。\\r\\n\\r\\n５行目\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"課題-2-さらに句点でも分割\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%AA%B2%E9%A1%8C-2-%E3%81%95%E3%82%89%E3%81%AB%E5%8F%A5%E7%82%B9%E3%81%A7%E3%82%82%E5%88%86%E5%89%B2\",\n    \"aria-label\": \"課題 2 さらに句点でも分割 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"課題 2. さらに句点でも分割\"), \"\\n\", React.createElement(_components.p, null, \"課題 1 の処理に次の仕様を加えた StringsMoreSplitter クラスを作成しなさい\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"句点（。）でも分割する\"), \"\\n\", React.createElement(_components.li, null, \"ただし、句点（。）の直後に改行（¥n）がある場合は、句点（。）の直後の改行（¥n）は無視する\"), \"\\n\", React.createElement(_components.li, null, \"メソッド名は splitWithLineBreakCodeAndPeriod とする\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/StringsMoreSplitter.java（一部抜粋）\"\n  }, \"List<String> lines = splitWithLineBreakCodeAndPeriod(\\r\\n    \\\"１行目。２行目。¥n３行目。４行目。¥n¥n５行目。\\\"\\r\\n);\\r\\n\\r\\nfor (String line : lines) {\\r\\n    System.out.println(line);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=StringsMoreSplitter.javaの実行結果\"\n  }, \"１行目。\\r\\n２行目。\\r\\n３行目。\\r\\n４行目。\\r\\n\\r\\n５行目。\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"課題-3-さらに固定長で分割\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%AA%B2%E9%A1%8C-3-%E3%81%95%E3%82%89%E3%81%AB%E5%9B%BA%E5%AE%9A%E9%95%B7%E3%81%A7%E5%88%86%E5%89%B2\",\n    \"aria-label\": \"課題 3 さらに固定長で分割 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"課題 3. さらに固定長で分割\"), \"\\n\", React.createElement(_components.p, null, \"課題 2 の処理に次の仕様を加えた StringsFixedLengthSplitter クラスを作成しなさい\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"文字列を指定した長さで分割する\"), \"\\n\", React.createElement(_components.li, null, \"メソッド名は splitFixedLengthWithLineBreakCodeAndPeriod とする\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/StringsFixedLengthSplitter.java（一部抜粋）\"\n  }, \"List<String> lines = splitFixedLengthWithLineBreakCodeAndPeriod(\\r\\n    \\\"このプログラムは、文字列を指定された幅で改行するサンプルプログラムです。\\\",\\r\\n    6\\r\\n);\\r\\n\\r\\nfor (String line : lines) {\\r\\n    System.out.println(line);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=StringsFixedLengthSplitter.javaの実行結果\"\n  }, \"このプログラ\\r\\nムは、文字列\\r\\nを指定された\\r\\n幅で改行する\\r\\nサンプルプロ\\r\\nグラムです。\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"課題-4-さらに禁則処理を追加\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%AA%B2%E9%A1%8C-4-%E3%81%95%E3%82%89%E3%81%AB%E7%A6%81%E5%89%87%E5%87%A6%E7%90%86%E3%82%92%E8%BF%BD%E5%8A%A0\",\n    \"aria-label\": \"課題 4 さらに禁則処理を追加 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"課題 4. さらに禁則処理を追加\"), \"\\n\", React.createElement(_components.p, null, \"課題 3 の処理に次の禁則処理を追加した StringsJaHyphenationSplitter クラスを作成しなさい\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"行頭禁則文字を句読点（、。）とする\"), \"\\n\", React.createElement(_components.li, null, \"メソッド名は splitFixedLengthJaHyphenationWithLineBreakCodeAndPeriod とする\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\",\n    meta: \"title=src/StringsJaHyphenationSplitter.java（一部抜粋）\"\n  }, \"List<String> lines =\\r\\n    splitFixedLengthJaHyphenationWithLineBreakCodeAndPeriod(\\r\\n        \\\"このプログラムは、句読点を行頭禁則処理するサンプル。¥n\\\"\\r\\n        + \\\"最後の行です\\\",\\r\\n        8\\r\\n    );\\r\\n\\r\\nfor (String line : lines) {\\r\\n    System.out.println(line);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-txt\",\n    meta: \"title=StringsJaHyphenationSplitter.javaの実行結果\"\n  }, \"このプログラムは、\\r\\n句読点を行頭禁則\\r\\n処理するサンプル。\\r\\n最後の行です\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/WebSiteRepositories/JavaBootcampMirror/java-bootcamp-mirror/website/pages/docs/primary/15-string-split.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","h2","p","ul","li","pre","code","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","meta","wrapper","MDXLayout","DocTemplate","_ref","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}